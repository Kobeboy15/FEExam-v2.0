{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/Kobeboy/Desktop/frontend-exam/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\frontend-exam\\\\frontend\\\\components\\\\news.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    posts {\\n      id content createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport Card from './posts/postcard';\nimport styles from './news.module.css';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nfunction News(props) {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(FETCH_POSTS_QUERY),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  var _useState = useState(6),\n      feedLimit = _useState[0],\n      setFeedLimit = _useState[1];\n\n  function updateFeedLimit() {\n    setFeedLimit(feedLimit * 2);\n  }\n\n  return __jsx(\"div\", {\n    className: styles.news__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.container__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: styles.title__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"News\"), localStorage.getItem('token') ? __jsx(Link, {\n    href: \"/posts/createpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: styles.title__newpost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Create New Post\")) : null), data && __jsx(\"div\", {\n    className: styles.container__content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, data.posts.filter(function (item, index) {\n    return index < feedLimit;\n  }).map(function (filteredItem) {\n    return __jsx(Link, {\n      href: \"/posts/\".concat(filteredItem.id),\n      key: filteredItem.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }, __jsx(Card, {\n      date: filteredItem.createdAt,\n      description: filteredItem.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    })));\n  })), data && data.posts.length > feedLimit ? __jsx(\"div\", {\n    className: styles.container__button__wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: styles.container__button,\n    onClick: updateFeedLimit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Load More\")) : null);\n}\n\n_s(News, \"bgI0uVb+9pIW7iXzSGrKJxg0cJc=\", false, function () {\n  return [useQuery];\n});\n\n_c = News;\nvar FETCH_POSTS_QUERY = gql(_templateObject());\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/frontend-exam/frontend/components/news.js"],"names":["Link","Card","styles","useState","useQuery","gql","News","props","FETCH_POSTS_QUERY","loading","data","feedLimit","setFeedLimit","updateFeedLimit","news__container","container__title","title__text","localStorage","getItem","title__newpost","container__content","posts","filter","item","index","map","filteredItem","id","createdAt","content","length","container__button__wrapper","container__button"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA;;AAAA,kBAEOH,QAAQ,CAACI,iBAAD,CAFf;AAAA,MAEXC,OAFW,aAEXA,OAFW;AAAA,MAEFC,IAFE,aAEFA,IAFE;;AAAA,kBAGeP,QAAQ,CAAC,CAAD,CAHvB;AAAA,MAGZQ,SAHY;AAAA,MAGDC,YAHC;;AAKnB,WAASC,eAAT,GAA2B;AACzBD,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACY,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACa,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEb,MAAM,CAACc,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEKC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,GACA,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEhB,MAAM,CAACiB,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADA,GAME,IARN,CADF,EAYIT,IAAI,IACJ;AAAK,IAAA,SAAS,EAAER,MAAM,CAACkB,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIV,IAAI,CAACW,KAAL,CAAWC,MAAX,CAAkB,UAACC,IAAD,EAAOC,KAAP;AAAA,WAAkBA,KAAK,GAAGb,SAA1B;AAAA,GAAlB,EACCc,GADD,CACK,UAACC,YAAD;AAAA,WAED,MAAC,IAAD;AAAM,MAAA,IAAI,mBAAYA,YAAY,CAACC,EAAzB,CAAV;AAAyC,MAAA,GAAG,EAAID,YAAY,CAACC,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AACE,MAAA,IAAI,EAAID,YAAY,CAACE,SADvB;AAEE,MAAA,WAAW,EAAIF,YAAY,CAACG,OAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAFC;AAAA,GADL,CAFJ,CAbJ,EAgCKnB,IAAI,IAAKA,IAAI,CAACW,KAAL,CAAWS,MAAX,GAAoBnB,SAA9B,GACE;AAAK,IAAA,SAAS,EAAET,MAAM,CAAC6B,0BAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAE7B,MAAM,CAAC8B,iBADpB;AAEE,IAAA,OAAO,EAAEnB,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,GASE,IAzCN,CADF;AA8CD;;GAvDQP,I;UAEmBF,Q;;;KAFnBE,I;AAyDT,IAAME,iBAAiB,GAAGH,GAAH,mBAAvB;AAQA,eAAeC,IAAf","sourcesContent":["import Link from 'next/link'\r\nimport Card from './posts/postcard'\r\nimport styles from './news.module.css'\r\nimport { useState } from 'react'\r\n\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\n\r\n\r\nfunction News(props) {\r\n\r\n  const { loading, data } = useQuery(FETCH_POSTS_QUERY);\r\n  const [feedLimit, setFeedLimit] = useState(6);\r\n\r\n  function updateFeedLimit() {\r\n    setFeedLimit(feedLimit * 2);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.news__container}>\r\n      <div className={styles.container__title}>\r\n        <h2 className={styles.title__text}>News</h2>\r\n        { (localStorage.getItem('token')) ?\r\n          <Link href=\"/posts/createpost\">\r\n            <a className={styles.title__newpost}>\r\n              Create New Post\r\n            </a>\r\n          </Link>\r\n          : null\r\n        }\r\n      </div>\r\n      { data && \r\n        <div className={styles.container__content}>\r\n          {\r\n            data.posts.filter((item, index) => (index < feedLimit))\r\n            .map((filteredItem) => \r\n              (\r\n                <Link href={`/posts/${filteredItem.id}`} key = {filteredItem.id}>\r\n                  <a>\r\n                    <Card \r\n                      date = {filteredItem.createdAt}\r\n                      description = {filteredItem.content}\r\n                    />\r\n                  </a>\r\n                </Link>\r\n              )\r\n            )\r\n          }\r\n        </div>\r\n      }\r\n      {\r\n        (data && (data.posts.length > feedLimit)) \r\n        ? <div className={styles.container__button__wrapper}>\r\n            <button \r\n              className={styles.container__button}\r\n              onClick={updateFeedLimit}\r\n            >\r\n              Load More\r\n            </button>\r\n          </div>\r\n        : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst FETCH_POSTS_QUERY = gql`\r\n  {\r\n    posts {\r\n      id content createdAt\r\n    }\r\n  }\r\n`\r\n\r\nexport default News;"]},"metadata":{},"sourceType":"module"}