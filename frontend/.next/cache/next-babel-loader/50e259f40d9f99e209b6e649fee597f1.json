{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\frontend-exam\\\\frontend\\\\components\\\\navbar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState, useContext } from 'react';\nimport styles from './navbar.module.css';\nimport UserContext from './UserContext';\n\nfunction renderButton(userStatus, currentPath, setLoginStatus) {\n  const router = useRouter();\n\n  const handleLogOut = () => {\n    let logOutConfirm = confirm(\"Are you sure you want to log out?\");\n\n    if (logOutConfirm) {\n      setLoginStatus(false);\n      localStorage.removeItem('token');\n      router.push('/');\n    }\n  };\n\n  if (!userStatus) {\n    if (currentPath == \"/\") {\n      return __jsx(Link, {\n        href: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        className: styles.container__text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, \"LOGIN\"));\n    } else {\n      return __jsx(Link, {\n        href: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        className: styles.container__text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, \"CLOSE\"));\n    }\n  } else {\n    return __jsx(\"p\", {\n      className: styles.container__text,\n      onClick: handleLogOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, \"LOGOUT\");\n  }\n}\n\nexport default function Navbar() {\n  const router = useRouter();\n  const {\n    isLogin,\n    setLogin\n  } = useContext(UserContext);\n  const {\n    0: currentPath,\n    1: updateCurrentPath\n  } = useState();\n  useEffect(() => {\n    updateCurrentPath(router.pathname);\n  }, []);\n  return __jsx(\"div\", {\n    className: styles.nav__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/LOGO.svg\",\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), renderButton(isLogin, currentPath, setLogin));\n}","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/frontend-exam/frontend/components/navbar.js"],"names":["Link","useRouter","useEffect","useState","useContext","styles","UserContext","renderButton","userStatus","currentPath","setLoginStatus","router","handleLogOut","logOutConfirm","confirm","localStorage","removeItem","push","container__text","Navbar","isLogin","setLogin","updateCurrentPath","pathname","nav__container"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,WAAlC,EAA+CC,cAA/C,EAA+D;AAE7D,QAAMC,MAAM,GAAGV,SAAS,EAAxB;;AAEA,QAAMW,YAAY,GAAG,MAAM;AACzB,QAAIC,aAAa,GAAGC,OAAO,CAAC,mCAAD,CAA3B;;AACA,QAAGD,aAAH,EAAkB;AAChBH,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAK,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAL,MAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ;AACD;AACF,GAPD;;AASA,MAAG,CAACT,UAAJ,EAAgB;AACd,QAAGC,WAAW,IAAI,GAAlB,EAAuB;AACrB,aACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAEJ,MAAM,CAACa,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD,KAND,MAMO;AACL,aACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAEb,MAAM,CAACa,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD;AACF,GAdD,MAcO;AACL,WACE;AACE,MAAA,SAAS,EAAEb,MAAM,CAACa,eADpB;AAEE,MAAA,OAAO,EAAEN,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD;AACF;;AAED,eAAe,SAASO,MAAT,GAAkB;AAE/B,QAAMR,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAEmB,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBjB,UAAU,CAACE,WAAD,CAAxC;AACA,QAAM;AAAA,OAACG,WAAD;AAAA,OAAca;AAAd,MAAmCnB,QAAQ,EAAjD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,iBAAiB,CAACX,MAAM,CAACY,QAAR,CAAjB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAElB,MAAM,CAACmB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,kBAAT;AAA4B,IAAA,GAAG,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGjB,YAAY,CAACa,OAAD,EAAUX,WAAV,EAAuBY,QAAvB,CAFf,CADF;AAMD","sourcesContent":["import Link from 'next/link'\r\nimport { useRouter } from 'next/router'\r\nimport { useEffect, useState, useContext } from 'react'\r\nimport styles from './navbar.module.css'\r\nimport UserContext from './UserContext'\r\n\r\nfunction renderButton(userStatus, currentPath, setLoginStatus) {\r\n\r\n  const router = useRouter();\r\n\r\n  const handleLogOut = () => {\r\n    let logOutConfirm = confirm(\"Are you sure you want to log out?\");\r\n    if(logOutConfirm) {\r\n      setLoginStatus(false);\r\n      localStorage.removeItem('token');\r\n      router.push('/');\r\n    }\r\n  }\r\n\r\n  if(!userStatus) {\r\n    if(currentPath == \"/\") {\r\n      return (\r\n        <Link href=\"/login\">\r\n          <a className={styles.container__text}>LOGIN</a>\r\n        </Link>\r\n      );\r\n    } else {\r\n      return (\r\n        <Link href=\"/\">\r\n          <a className={styles.container__text}>CLOSE</a>\r\n        </Link>\r\n      );\r\n    }\r\n  } else {\r\n    return (\r\n      <p \r\n        className={styles.container__text}\r\n        onClick={handleLogOut}\r\n      >\r\n        LOGOUT\r\n      </p>\r\n    )\r\n  }\r\n}\r\n\r\nexport default function Navbar() {\r\n\r\n  const router = useRouter();\r\n  const { isLogin, setLogin } = useContext(UserContext);\r\n  const [currentPath, updateCurrentPath] = useState();\r\n\r\n  useEffect(() => {\r\n    updateCurrentPath(router.pathname);\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.nav__container}>\r\n      <img src=\"/images/LOGO.svg\" alt=\"Logo\" />\r\n      {renderButton(isLogin, currentPath, setLogin)}\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}