{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\FE_EXAM(CLEANUP)\\\\frontend\\\\pages\\\\posts\\\\[postId].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useEffect, useState, useRef } from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { FETCH_POST_QUERY, ADD_COMMENT, UPDATE_POST } from '../../repositories/posts';\nimport { useRouter } from 'next/router';\nimport { useContext } from 'react';\nimport UserContext from '../../components/UserContext';\nimport Navbar from '../../components/navbar';\nimport Footer from '../../components/footer';\nimport Loading from '../../components/loading';\nimport styles from './viewpost.module.css';\n\nfunction ViewPost() {\n  const uploadImage = useRef(null);\n  const router = useRouter();\n  const {\n    postId\n  } = router.query;\n  const {\n    0: postDetails,\n    1: setPostDetails\n  } = useState({});\n  const {\n    isLogin\n  } = useContext(UserContext);\n  const {\n    0: isEditing,\n    1: setEditStatus\n  } = useState(false);\n  const {\n    0: imgValue,\n    1: setImgValue\n  } = useState('');\n  const {\n    0: commentContent,\n    1: setCommentContent\n  } = useState('');\n  const {\n    0: tempValues,\n    1: setTempValues\n  } = useState({\n    id: null,\n    title: '',\n    content: '',\n    image: ''\n  });\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId: Number(postId)\n    }\n  });\n  const [addComment, {\n    loadingComment\n  }] = useMutation(ADD_COMMENT, {\n    update(_, result) {\n      let commentArray = postDetails.comments;\n      let newComment = {\n        id: result.data.addComment.id,\n        content: result.data.addComment.content,\n        createdAt: result.data.addComment.createdAt\n      };\n      commentArray.unshift(newComment);\n      console.log(document.getElementsByClassName(styles.input__textarea)[0].defaultValue);\n      setPostDetails(_objectSpread(_objectSpread({}, postDetails), {}, {\n        ['comments']: commentArray\n      }));\n    },\n\n    onError(err) {\n      console.log(err);\n    },\n\n    variables: {\n      postId: Number(postId),\n      content: commentContent\n    }\n  });\n  const [updatePost, {\n    loadingUpdate\n  }] = useMutation(UPDATE_POST, {\n    update(_, result) {\n      location.reload();\n    },\n\n    onError(err) {\n      console.log(err);\n    },\n\n    variables: {\n      id: tempValues.id,\n      title: tempValues.title,\n      content: tempValues.content,\n      image: imgValue\n    }\n  });\n\n  const handleComment = event => {\n    setCommentContent(event.target.value);\n  };\n\n  const onChange = event => {\n    setTempValues(_objectSpread(_objectSpread({}, tempValues), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleEditPost = () => {\n    console.log(data);\n    let tempObject = {\n      id: data.post.id,\n      title: data.post.title,\n      content: data.post.content,\n      image: data.post.image\n    };\n    setTempValues(tempObject);\n    setEditStatus(true);\n  };\n\n  const cancelEditPost = () => {\n    var res = confirm(\"Are you sure you want to cancel changes?\");\n\n    if (res) {\n      let tempObject = {\n        id: data.post.id,\n        title: data.post.title,\n        content: data.post.content\n      };\n      setImgValue(data.post.image);\n      setTempValues(tempObject);\n      setEditStatus(false);\n    }\n  };\n\n  const saveEditPost = () => {\n    updatePost();\n    setEditStatus(false);\n  };\n\n  const handleImageUpload = () => {\n    uploadImage.current.click();\n  };\n\n  const fileDataURL = file => new Promise((resolve, reject) => {\n    let fr = new FileReader();\n\n    fr.onload = () => resolve(fr.result);\n\n    fr.onerror = reject;\n    fr.readAsDataURL(file);\n  });\n\n  const handleImage = event => {\n    if (event.target.files[0]) {\n      fileDataURL(event.target.files[0]).then(res => {\n        setImgValue(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (data) {\n      setPostDetails(data.post);\n    }\n  }, [data]);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: styles.viewpost__loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, postDetails && __jsx(\"div\", {\n      className: styles.viewpost__container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, __jsx(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }), postDetails.title ? __jsx(\"div\", {\n      className: styles.navigation__header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: styles.navigation__content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, __jsx(\"a\", {\n      className: styles.content__text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, \"HOME\")), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, \"\\xA0\\xA0\", ' > ', \"\\xA0\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, \"\\xA0\", postDetails.title))) : null, __jsx(\"div\", {\n      className: styles.navigation__body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, isLogin ? __jsx(\"div\", {\n      className: styles.body__action,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, isEditing ? __jsx(\"div\", {\n      className: styles.action__container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, __jsx(\"p\", {\n      className: styles.action__text,\n      onClick: saveEditPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, \"Save Post\"), __jsx(\"p\", {\n      className: styles.action__text,\n      onClick: cancelEditPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, \"Cancel\")) : __jsx(\"p\", {\n      className: styles.action__text,\n      onClick: handleEditPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, \"Edit Post\")) : null, postDetails ? __jsx(\"div\", {\n      className: styles.body__details,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      className: styles.details__date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, postDetails.createdAt ? data.post.createdAt.slice(0, 10) : null), !isEditing ? __jsx(\"h2\", {\n      className: styles.details__title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, postDetails.title) : __jsx(\"textarea\", {\n      placeholder: \"title\",\n      name: \"title\",\n      onChange: onChange,\n      defaultValue: tempValues.title,\n      className: `${styles.details__title} + ${styles.details__title__text}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: styles.details__container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, isEditing ? __jsx(\"div\", {\n      className: styles.details__,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 23\n      }\n    }, __jsx(\"button\", {\n      className: styles.details__upload_image,\n      onClick: handleImageUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, \"Upload Image\"), __jsx(\"input\", {\n      name: \"myfile\",\n      type: \"file\",\n      ref: uploadImage,\n      onChange: handleImage,\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    })) : null, __jsx(\"img\", {\n      className: styles.details__image,\n      src: imgValue ? imgValue : postDetails.image ? postDetails.image : \"/images/girl.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    })), !isEditing ? __jsx(\"p\", {\n      className: styles.details__body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 23\n      }\n    }, postDetails.content) : __jsx(\"textarea\", {\n      placeholder: \"Content\",\n      name: \"content\",\n      onChange: onChange,\n      defaultValue: tempValues.content,\n      className: `${styles.details__body} + ${styles.details__body__text}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 23\n      }\n    })) : null, __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      className: styles.body__comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      className: styles.comments__title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, \"COMMENT\"), postDetails.comments ? postDetails.comments.map(comment => {\n      return __jsx(\"div\", {\n        key: comment.id,\n        className: styles.comments__item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 23\n        }\n      }, __jsx(\"p\", {\n        className: styles.item__content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }\n      }, comment.content), __jsx(\"p\", {\n        className: styles.item__date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }\n      }, comment.createdAt.slice(0, 10)));\n    }) : null, __jsx(\"div\", {\n      className: styles.comments__input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, __jsx(\"textarea\", {\n      placeholder: \"Write comment\",\n      name: \"comment\",\n      onBlur: handleComment,\n      defaultValue: commentContent,\n      className: styles.input__textarea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }), __jsx(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      onClick: addComment,\n      className: styles.input__submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }))))), __jsx(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nexport const getServerSideProps = async ({\n  params\n}) => {\n  return {\n    props: {}\n  };\n};\nexport default ViewPost;","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/FE_EXAM(CLEANUP)/frontend/pages/posts/[postId].js"],"names":["Link","useEffect","useState","useRef","useMutation","useQuery","FETCH_POST_QUERY","ADD_COMMENT","UPDATE_POST","useRouter","useContext","UserContext","Navbar","Footer","Loading","styles","ViewPost","uploadImage","router","postId","query","postDetails","setPostDetails","isLogin","isEditing","setEditStatus","imgValue","setImgValue","commentContent","setCommentContent","tempValues","setTempValues","id","title","content","image","loading","error","data","variables","Number","addComment","loadingComment","update","_","result","commentArray","comments","newComment","createdAt","unshift","console","log","document","getElementsByClassName","input__textarea","defaultValue","onError","err","updatePost","loadingUpdate","location","reload","handleComment","event","target","value","onChange","name","handleEditPost","tempObject","post","cancelEditPost","res","confirm","saveEditPost","handleImageUpload","current","click","fileDataURL","file","Promise","resolve","reject","fr","FileReader","onload","onerror","readAsDataURL","handleImage","files","then","catch","viewpost__loading","viewpost__container","navigation__header","navigation__content","content__text","navigation__body","body__action","action__container","action__text","body__details","details__date","slice","details__title","details__title__text","details__container","details__","details__upload_image","details__image","details__body","details__body__text","body__comments","comments__title","map","comment","comments__item","item__content","item__date","comments__input","input__submit","getServerSideProps","params","props"],"mappings":"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","sourcesContent":["import Link from 'next/link'\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport { FETCH_POST_QUERY, ADD_COMMENT, UPDATE_POST } from '../../repositories/posts'\r\nimport { useRouter } from 'next/router'\r\nimport { useContext } from 'react'\r\nimport UserContext from '../../components/UserContext'\r\nimport Navbar from '../../components/navbar';\r\nimport Footer from '../../components/footer';\r\nimport Loading from '../../components/loading'\r\nimport styles from './viewpost.module.css';\r\n\r\n\r\nfunction ViewPost() {\r\n  const uploadImage = useRef(null);\r\n  const router = useRouter();\r\n  const { postId } = router.query;\r\n  const [postDetails, setPostDetails] = useState({});\r\n  const { isLogin } = useContext(UserContext);\r\n  const [isEditing, setEditStatus] = useState(false);\r\n  const [imgValue, setImgValue] = useState('');\r\n  const [commentContent, setCommentContent] = useState('');\r\n  const [tempValues, setTempValues] = useState({\r\n    id: null,\r\n    title: '',\r\n    content: '',\r\n    image: ''\r\n  })\r\n\r\n  const { loading, error, data } = useQuery(FETCH_POST_QUERY, {\r\n    variables: { \r\n      postId: Number(postId) \r\n    }\r\n  })\r\n\r\n  const [addComment, { loadingComment }] = useMutation(ADD_COMMENT, {\r\n    update(_,result) {\r\n      let commentArray = postDetails.comments;\r\n      let newComment = {\r\n        id: result.data.addComment.id,\r\n        content: result.data.addComment.content,\r\n        createdAt: result.data.addComment.createdAt\r\n      }\r\n      commentArray.unshift(newComment);\r\n      console.log(document.getElementsByClassName(styles.input__textarea)[0].defaultValue);\r\n      setPostDetails({...postDetails, ['comments']: commentArray});\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n    },\r\n    variables: {\r\n      postId: Number(postId),\r\n      content: commentContent\r\n    }\r\n  })\r\n\r\n  const [updatePost, { loadingUpdate }] = useMutation(UPDATE_POST, {\r\n    update(_, result) {\r\n      location.reload();\r\n    },\r\n    onError(err){\r\n      console.log(err);\r\n    },\r\n    variables: {\r\n      id: tempValues.id,\r\n      title: tempValues.title,\r\n      content: tempValues.content,\r\n      image: imgValue\r\n    }\r\n  })\r\n\r\n  const handleComment = (event) => {\r\n    setCommentContent(event.target.value);\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    setTempValues({...tempValues, [event.target.name]: event.target.value});\r\n  }\r\n\r\n  const handleEditPost = () => {\r\n    console.log(data);\r\n    let tempObject = {\r\n      id: data.post.id,\r\n      title: data.post.title,\r\n      content: data.post.content,\r\n      image: data.post.image\r\n    }\r\n    setTempValues(tempObject);\r\n    setEditStatus(true);\r\n  }\r\n\r\n  const cancelEditPost = () => {\r\n    var res = confirm(\"Are you sure you want to cancel changes?\");\r\n    if(res){\r\n      let tempObject = {\r\n        id: data.post.id,\r\n        title: data.post.title,\r\n        content: data.post.content,\r\n      }\r\n      setImgValue(data.post.image);\r\n      setTempValues(tempObject);\r\n      setEditStatus(false);\r\n    }\r\n  }\r\n\r\n  const saveEditPost = () => {\r\n    updatePost();\r\n    setEditStatus(false);\r\n  }\r\n\r\n  const handleImageUpload = () => {\r\n    uploadImage.current.click();\r\n  }\r\n\r\n  const fileDataURL = file => new Promise((resolve, reject) => {\r\n    let fr = new FileReader();\r\n    fr.onload = () => resolve(fr.result);\r\n    fr.onerror = reject;\r\n    fr.readAsDataURL(file);\r\n  })\r\n\r\n  const handleImage = (event) => {\r\n    if(event.target.files[0]){\r\n      fileDataURL(event.target.files[0])\r\n      .then(res => {\r\n        setImgValue(res);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(data){\r\n      setPostDetails(data.post);\r\n    }\r\n  }, [data])\r\n\r\n  if(loading){\r\n    return (\r\n      <div className={styles.viewpost__loading}>\r\n        <Loading />\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        { postDetails &&\r\n          <div className={styles.viewpost__container}>\r\n            <Navbar />\r\n            { postDetails.title ?\r\n              <div className={styles.navigation__header}>\r\n                <div className={styles.navigation__content}>\r\n                  <Link href=\"/\">\r\n                    <a className={styles.content__text}>HOME</a>\r\n                  </Link>\r\n                  <p>&nbsp;&nbsp;{' > '}&nbsp;</p>\r\n                  <p>&nbsp;{postDetails.title}</p>\r\n                </div>\r\n              </div>\r\n              : null\r\n            }\r\n            <div className={styles.navigation__body}>\r\n              { isLogin ?\r\n                <div className={styles.body__action}>\r\n                  { isEditing ?\r\n                  <div className={styles.action__container}>\r\n                    <p \r\n                      className={styles.action__text}\r\n                      onClick={saveEditPost}\r\n                    >\r\n                      Save Post</p>\r\n                    <p \r\n                      className={styles.action__text}\r\n                      onClick={cancelEditPost}\r\n                    >Cancel</p>\r\n                  </div>\r\n                  : <p \r\n                      className={styles.action__text}\r\n                      onClick={handleEditPost}\r\n                    >Edit Post</p>\r\n                  }\r\n                </div>\r\n                : null\r\n              }\r\n              { postDetails ?\r\n                <div className={styles.body__details}>\r\n                  <p className={styles.details__date}>\r\n                    {postDetails.createdAt ? data.post.createdAt.slice(0,10) : null}\r\n                  </p>\r\n                  { !isEditing \r\n                  ? <h2 className={styles.details__title}>{postDetails.title}</h2>\r\n                  : <textarea\r\n                      placeholder=\"title\"\r\n                      name=\"title\"\r\n                      onChange={onChange}\r\n                      defaultValue={tempValues.title}\r\n                      className={`${styles.details__title} + ${styles.details__title__text}`}\r\n                    />\r\n                  }\r\n                  <div className={styles.details__container}>\r\n                    { isEditing \r\n                      ? \r\n                      <div className={styles.details__}>\r\n                        <button\r\n                          className={styles.details__upload_image}\r\n                          onClick={handleImageUpload}\r\n                        >\r\n                          Upload Image\r\n                        </button>\r\n                        <input \r\n                          name=\"myfile\" \r\n                          type=\"file\"\r\n                          ref={uploadImage} \r\n                          onChange={handleImage}\r\n                          hidden\r\n                        />\r\n                      </div>\r\n                      : null\r\n                    }\r\n                    <img\r\n                      className={styles.details__image} \r\n                      src={imgValue ? imgValue \r\n                        :(postDetails.image ? postDetails.image : \"/images/girl.png\")}\r\n                    />\r\n                  </div>\r\n                  { !isEditing\r\n                    ? <p className={styles.details__body}>{postDetails.content}</p>\r\n                    : <textarea\r\n                        placeholder=\"Content\"\r\n                        name=\"content\"\r\n                        onChange={onChange}\r\n                        defaultValue={tempValues.content}\r\n                        className={`${styles.details__body} + ${styles.details__body__text}`}\r\n                      />\r\n                  }\r\n                </div>\r\n                : null\r\n              }\r\n              <hr />\r\n              <div className={styles.body__comments}>\r\n                <h2 className={styles.comments__title}>COMMENT</h2>\r\n                { postDetails.comments ?\r\n                  postDetails.comments.map((comment) => {\r\n                    return(\r\n                      <div key={comment.id} className={styles.comments__item}>\r\n                        <p className={styles.item__content}>{comment.content}</p>\r\n                        <p className={styles.item__date}>{comment.createdAt.slice(0,10)}</p>\r\n                      </div>\r\n                    )\r\n                  })\r\n                  : null\r\n                }\r\n                <div className={styles.comments__input}>\r\n                  <textarea\r\n                    placeholder=\"Write comment\" \r\n                    name=\"comment\"\r\n                    onBlur={handleComment}\r\n                    defaultValue={commentContent}\r\n                    className={styles.input__textarea} \r\n                  />\r\n                  <input \r\n                    type=\"button\" \r\n                    value=\"Submit\"\r\n                    onClick={addComment}\r\n                    className={styles.input__submit}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const getServerSideProps = async ({params}) => {\r\n  return {props: {}};\r\n}\r\n\r\nexport default ViewPost;\r\n"]},"metadata":{},"sourceType":"module"}