{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/Kobeboy/Desktop/frontend-exam/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\frontend-exam\\\\frontend\\\\pages\\\\posts\\\\[postId].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Post($postId: Int!){\\n    post(id: $postId) {\\n      id \\n      title \\n      content \\n      image \\n      createdAt \\n      comments{\\n        content createdAt\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport axios from 'axios';\nimport Link from 'next/link';\nimport { useEffect, useState, useRef } from 'react';\nimport { useContext } from 'react';\nimport UserContext from '../../components/UserContext';\nimport Navbar from '../../components/navbar';\nimport Footer from '../../components/footer';\nimport styles from './viewpost.module.css';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { useRouter } from 'next/router';\n\nfunction ViewPost() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n  var postId = router.query.postId;\n\n  var _useQuery = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId: Number(postId)\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useContext = useContext(UserContext),\n      isLogin = _useContext.isLogin;\n\n  var _useState = useState(''),\n      newComment = _useState[0],\n      updateNewComment = _useState[1];\n\n  var _useState2 = useState(false),\n      isEditing = _useState2[0],\n      setEditStatus = _useState2[1];\n\n  var _useState3 = useState(''),\n      postDate = _useState3[0],\n      setPostDate = _useState3[1];\n\n  var _useState4 = useState(''),\n      postTitle = _useState4[0],\n      setPostTitle = _useState4[1];\n\n  var _useState5 = useState(''),\n      postImage = _useState5[0],\n      setPostImage = _useState5[1];\n\n  var _useState6 = useState(''),\n      postBody = _useState6[0],\n      setPostBody = _useState6[1];\n\n  var _useState7 = useState([]),\n      postComments = _useState7[0],\n      setPostComments = _useState7[1];\n\n  var _useState8 = useState(''),\n      tempTitle = _useState8[0],\n      setTempTitle = _useState8[1];\n\n  var _useState9 = useState(''),\n      tempBody = _useState9[0],\n      setTempBody = _useState9[1];\n\n  var _useState10 = useState(''),\n      tempImage = _useState10[0],\n      setTempImage = _useState10[1];\n\n  var uploadImage = useRef(null);\n  useEffect(function () {\n    console.log(typeof postId);\n    console.log(data); // axios.get('http://localhost:3000/post-details.json')\n    // .then((res) => {\n    //   setPostDate(res.data.date)\n    //   setPostTitle(res.data.title);\n    //   setPostBody(res.data.body);\n    //   setPostImage(res.data.image_path);\n    //   setPostComments(res.data.comments);\n    //   setTempTitle(res.data.title);\n    //   setTempBody(res.data.body);\n    //   setTempImage(res.data.image_path);\n    // })\n  }, []);\n\n  var cancelEditPost = function cancelEditPost() {\n    setTempTitle(postTitle);\n    setTempBody(postBody);\n    setTempImage(postImage);\n    setEditStatus(!isEditing);\n  };\n\n  var saveEditPost = function saveEditPost() {\n    setPostTitle(tempTitle);\n    setPostBody(tempBody);\n    setPostImage(tempImage);\n    setEditStatus(!isEditing);\n  };\n\n  var handleComment = function handleComment(event) {\n    updateNewComment(event.target.value);\n  };\n\n  var handleTitle = function handleTitle(event) {\n    setTempTitle(event.target.value);\n  };\n\n  var handleImageUpload = function handleImageUpload(event) {\n    uploadImage.current.click();\n  };\n\n  var handleImage = function handleImage(event) {\n    if (event.target.files[0]) {\n      setTempImage(URL.createObjectURL(event.target.files[0]));\n    }\n  };\n\n  var handleBody = function handleBody(event) {\n    setTempBody(event.target.value);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var tempArray = postComments;\n    var tempObj = {\n      comment_item: \"\",\n      comment_time: \"\"\n    };\n    tempObj.comment_item = newComment;\n    tempObj.comment_time = \"A moment ago\";\n    tempArray.unshift(tempObj);\n    setPostComments(tempArray);\n    updateNewComment(\"\");\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, data && __jsx(\"div\", {\n    className: styles.viewpost__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), data.post.title ? __jsx(\"div\", {\n    className: styles.navigation__header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: styles.navigation__content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    className: styles.content__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, \"HOME\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"\\xA0\\xA0\", ' > ', \"\\xA0\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"\\xA0\", data.post.title))) : null, __jsx(\"div\", {\n    className: styles.navigation__body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, isLogin ? __jsx(\"div\", {\n    className: styles.body__action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, isEditing ? __jsx(\"div\", {\n    className: styles.action__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    className: styles.action__text,\n    onClick: saveEditPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, \"Save Post\"), __jsx(\"p\", {\n    className: styles.action__text,\n    onClick: cancelEditPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \"Cancel\")) : __jsx(\"p\", {\n    className: styles.action__text,\n    onClick: function onClick() {\n      return setEditStatus(!isEditing);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, \"Edit Post\")) : null, data ? __jsx(\"div\", {\n    className: styles.body__details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: styles.details__date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, data.post.createdAt ? data.post.createdAt.slice(0, 10) : null), !isEditing ? __jsx(\"h2\", {\n    className: styles.details__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, data.post.title) : __jsx(\"textarea\", {\n    defaultValue: tempTitle,\n    onChange: handleTitle,\n    className: \"\".concat(styles.details__title, \" + \").concat(styles.details__title__text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    className: styles.details__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, isEditing ? __jsx(\"div\", {\n    className: styles.details__,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    className: styles.details__upload_image,\n    onClick: handleImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, \"Upload Image\"), __jsx(\"input\", {\n    name: \"myfile\",\n    type: \"file\",\n    ref: uploadImage,\n    onChange: handleImage,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 23\n    }\n  })) : null, __jsx(\"img\", {\n    className: styles.details__image,\n    src: data.post.image ? data.post.image : \"/images/girl.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  })), !isEditing ? __jsx(\"p\", {\n    className: styles.details__body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, data.post.content) : __jsx(\"textarea\", {\n    defaultValue: tempBody,\n    onChange: handleBody,\n    className: \"\".concat(styles.details__body, \" + \").concat(styles.details__body__text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  })) : null, __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }), postComments ? __jsx(\"div\", {\n    className: styles.body__comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    className: styles.comments__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, \"COMMENT\"), postComments.map(function (element, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: styles.comments__item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      className: styles.item__content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 23\n      }\n    }, element.comment_item), __jsx(\"p\", {\n      className: styles.item__date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 23\n      }\n    }, element.comment_time));\n  }), __jsx(\"div\", {\n    className: styles.comments__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, __jsx(\"textarea\", {\n    placeholder: \"Write comment\",\n    value: newComment,\n    onChange: handleComment,\n    className: styles.input__textarea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }), __jsx(\"input\", {\n    type: \"button\",\n    value: \"Submit\",\n    onClick: handleSubmit,\n    className: styles.input__submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  }))) : null)), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(ViewPost, \"duJQTxG32y4tk0i2Bw4MgJtOQUU=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = ViewPost;\nvar FETCH_POST_QUERY = gql(_templateObject());\nexport var __N_SSP = true;\nexport default ViewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/frontend-exam/frontend/pages/posts/[postId].js"],"names":["axios","Link","useEffect","useState","useRef","useContext","UserContext","Navbar","Footer","styles","useQuery","gql","useRouter","ViewPost","router","postId","query","FETCH_POST_QUERY","variables","Number","loading","error","data","isLogin","newComment","updateNewComment","isEditing","setEditStatus","postDate","setPostDate","postTitle","setPostTitle","postImage","setPostImage","postBody","setPostBody","postComments","setPostComments","tempTitle","setTempTitle","tempBody","setTempBody","tempImage","setTempImage","uploadImage","console","log","cancelEditPost","saveEditPost","handleComment","event","target","value","handleTitle","handleImageUpload","current","click","handleImage","files","URL","createObjectURL","handleBody","handleSubmit","tempArray","tempObj","comment_item","comment_time","unshift","viewpost__container","post","title","navigation__header","navigation__content","content__text","navigation__body","body__action","action__container","action__text","body__details","details__date","createdAt","slice","details__title","details__title__text","details__container","details__","details__upload_image","details__image","image","details__body","content","details__body__text","body__comments","comments__title","map","element","index","comments__item","item__content","item__date","comments__input","input__textarea","input__submit"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport Link from 'next/link'\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { useContext } from 'react'\r\nimport UserContext from '../../components/UserContext'\r\nimport Navbar from '../../components/navbar';\r\nimport Footer from '../../components/footer';\r\nimport styles from './viewpost.module.css';\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport { useRouter } from 'next/router'\r\n\r\n\r\n\r\nfunction ViewPost() {\r\n  const router = useRouter();\r\n  const { postId } = router.query;\r\n\r\n  const { loading, error, data } = useQuery(FETCH_POST_QUERY, {\r\n    variables: { \r\n      postId: Number(postId) \r\n    }\r\n  })\r\n\r\n  const { isLogin } = useContext(UserContext);\r\n\r\n  const [newComment, updateNewComment] = useState('');\r\n  const [isEditing, setEditStatus] = useState(false);\r\n  const [postDate, setPostDate] = useState('');\r\n  const [postTitle, setPostTitle] = useState('');\r\n  const [postImage, setPostImage] = useState('');\r\n  const [postBody, setPostBody] = useState('');\r\n  const [postComments, setPostComments] = useState([]);\r\n  const [tempTitle, setTempTitle] = useState('');\r\n  const [tempBody, setTempBody] = useState('');\r\n  const [tempImage, setTempImage] = useState('');\r\n\r\n  const uploadImage = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    console.log(typeof(postId));\r\n    console.log(data);\r\n    // axios.get('http://localhost:3000/post-details.json')\r\n    // .then((res) => {\r\n    //   setPostDate(res.data.date)\r\n    //   setPostTitle(res.data.title);\r\n    //   setPostBody(res.data.body);\r\n    //   setPostImage(res.data.image_path);\r\n    //   setPostComments(res.data.comments);\r\n\r\n    //   setTempTitle(res.data.title);\r\n    //   setTempBody(res.data.body);\r\n    //   setTempImage(res.data.image_path);\r\n    // })\r\n  },[]);\r\n\r\n  const cancelEditPost = () => {\r\n    setTempTitle(postTitle);\r\n    setTempBody(postBody);\r\n    setTempImage(postImage);\r\n    setEditStatus(!isEditing);\r\n  }\r\n\r\n  const saveEditPost = () => {\r\n    setPostTitle(tempTitle);\r\n    setPostBody(tempBody);\r\n    setPostImage(tempImage);\r\n    setEditStatus(!isEditing);\r\n  }\r\n\r\n  const handleComment = (event) => {\r\n    updateNewComment(event.target.value);\r\n  }\r\n\r\n  const handleTitle = (event) => {\r\n    setTempTitle(event.target.value);\r\n  }\r\n\r\n  const handleImageUpload = (event) => {\r\n    uploadImage.current.click();\r\n  }\r\n\r\n  const handleImage = (event) => {\r\n    if(event.target.files[0]){\r\n      setTempImage(URL.createObjectURL(event.target.files[0]));\r\n    }\r\n  }\r\n\r\n  const handleBody = (event) => {\r\n    setTempBody(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    let tempArray = postComments;\r\n    let tempObj = {\r\n      comment_item: \"\",\r\n      comment_time: \"\"\r\n    }\r\n\r\n    tempObj.comment_item = newComment;\r\n    tempObj.comment_time = \"A moment ago\";\r\n    tempArray.unshift(tempObj);\r\n\r\n    setPostComments(tempArray)\r\n    updateNewComment(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      { data &&\r\n        <div className={styles.viewpost__container}>\r\n          <Navbar />\r\n          { data.post.title ?\r\n            <div className={styles.navigation__header}>\r\n              <div className={styles.navigation__content}>\r\n                <Link href=\"/\">\r\n                  <a className={styles.content__text}>HOME</a>\r\n                </Link>\r\n                <p>&nbsp;&nbsp;{' > '}&nbsp;</p>\r\n                <p>&nbsp;{data.post.title}</p>\r\n              </div>\r\n            </div>\r\n            : null\r\n          }\r\n          <div className={styles.navigation__body}>\r\n            { isLogin ?\r\n              <div className={styles.body__action}>\r\n                { isEditing ?\r\n                <div className={styles.action__container}>\r\n                  <p \r\n                    className={styles.action__text}\r\n                    onClick={saveEditPost}\r\n                  >\r\n                    Save Post</p>\r\n                  <p \r\n                    className={styles.action__text}\r\n                    onClick={cancelEditPost}\r\n                  >Cancel</p>\r\n                </div>\r\n                : <p \r\n                    className={styles.action__text}\r\n                    onClick={() => setEditStatus(!isEditing)}\r\n                  >Edit Post</p>\r\n                }\r\n              </div>\r\n              : null\r\n            }\r\n            { data ?\r\n              <div className={styles.body__details}>\r\n                <p className={styles.details__date}>\r\n                  {data.post.createdAt ? data.post.createdAt.slice(0,10) : null}\r\n                </p>\r\n                { !isEditing \r\n                ? <h2 className={styles.details__title}>{data.post.title}</h2>\r\n                : <textarea \r\n                    defaultValue={tempTitle}\r\n                    onChange={handleTitle}\r\n                    className={`${styles.details__title} + ${styles.details__title__text}`}\r\n                  />\r\n                }\r\n                <div className={styles.details__container}>\r\n                  { isEditing \r\n                    ? \r\n                    <div className={styles.details__}>\r\n                      <button\r\n                        className={styles.details__upload_image}\r\n                        onClick={handleImageUpload}\r\n                      >\r\n                        Upload Image\r\n                      </button>\r\n                      <input \r\n                        name=\"myfile\" \r\n                        type=\"file\"\r\n                        ref={uploadImage} \r\n                        onChange={handleImage}\r\n                        hidden\r\n                      />\r\n                    </div>\r\n                    : null\r\n                  }\r\n                  <img\r\n                    className={styles.details__image} \r\n                    src={data.post.image ? data.post.image : \"/images/girl.png\"}\r\n                  />\r\n                </div>\r\n                { !isEditing\r\n                  ? <p className={styles.details__body}>{data.post.content}</p>\r\n                  : <textarea\r\n                      defaultValue={tempBody}\r\n                      onChange={handleBody}\r\n                      className={`${styles.details__body} + ${styles.details__body__text}`}\r\n                    />\r\n                }\r\n              </div>\r\n              : null\r\n            }\r\n            <hr />\r\n            { postComments ?\r\n              <div className={styles.body__comments}>\r\n                <h2 className={styles.comments__title}>COMMENT</h2>\r\n                {postComments.map((element, index) => {\r\n                  return(\r\n                    <div key={index} className={styles.comments__item}>\r\n                      <p className={styles.item__content}>{element.comment_item}</p>\r\n                      <p className={styles.item__date}>{element.comment_time}</p>\r\n                    </div>\r\n                  ); \r\n                })}\r\n                <div className={styles.comments__input}>\r\n                  <textarea\r\n                    placeholder=\"Write comment\" \r\n                    value={newComment}\r\n                    onChange={handleComment}\r\n                    className={styles.input__textarea} \r\n                  />\r\n                  <input \r\n                    type=\"button\" \r\n                    value=\"Submit\"\r\n                    onClick={handleSubmit}\r\n                    className={styles.input__submit}\r\n                  />\r\n                </div>\r\n              </div>\r\n              : null\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const getServerSideProps = async ({params}) => {\r\n  return {props: {}};\r\n}\r\n\r\nconst FETCH_POST_QUERY = gql`\r\n  query Post($postId: Int!){\r\n    post(id: $postId) {\r\n      id \r\n      title \r\n      content \r\n      image \r\n      createdAt \r\n      comments{\r\n        content createdAt\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\nexport default ViewPost;\r\n"]},"metadata":{},"sourceType":"module"}