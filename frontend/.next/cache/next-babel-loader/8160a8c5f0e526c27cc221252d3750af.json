{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\frontend-exam\\\\frontend\\\\components\\\\news.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Card from './posts/postcard';\nimport styles from './news.module.css';\nimport { useEffect, useState, useContext } from 'react';\nimport UserContext from '../components/UserContext';\nimport axios from 'axios';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nfunction News(props) {\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_POSTS_QUERY);\n  console.log(data);\n  const {\n    loginStatus,\n    toggleLogin\n  } = useContext(UserContext);\n  const {\n    0: feedLimit,\n    1: setFeedLimit\n  } = useState(6);\n  const {\n    0: cardPost,\n    1: updateCardPosts\n  } = useState([]);\n  useEffect(() => {\n    // axios.get('http://localhost:3000/news-posts.json')\n    // .then((res) => {\n    //   updateCardPosts(res.data);\n    // })\n    updateCardPosts(data.posts);\n  }, []);\n\n  function updateFeedLimit() {\n    setFeedLimit(feedLimit * 2);\n  }\n\n  if (loading) {\n    __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, \"Nothing\");\n  } else {\n    return __jsx(\"div\", {\n      className: styles.news__container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: styles.container__title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      className: styles.title__text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \"News\"), loginStatus ? __jsx(Link, {\n      href: \"/posts/createpost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      className: styles.title__newpost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"Create New Post\")) : null), __jsx(\"div\", {\n      className: styles.container__content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, cardPost.filter((item, index) => index < feedLimit).map((filteredItem, index) => __jsx(Link, {\n      href: \"/posts/viewpost\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, __jsx(Card, {\n      date: filteredItem.createdAt,\n      description: filteredItem.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }))))), cardPost.length > feedLimit ? __jsx(\"div\", {\n      className: styles.container__button__wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      className: styles.container__button,\n      onClick: updateFeedLimit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, \"Load More\")) : null);\n  }\n}\n\nconst FETCH_POSTS_QUERY = gql`\n  {\n    posts {\n      id content createdAt\n    }\n  }\n`;\nexport default News;","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/frontend-exam/frontend/components/news.js"],"names":["Link","Card","styles","useEffect","useState","useContext","UserContext","axios","useQuery","gql","News","props","loading","data","FETCH_POSTS_QUERY","console","log","loginStatus","toggleLogin","feedLimit","setFeedLimit","cardPost","updateCardPosts","posts","updateFeedLimit","news__container","container__title","title__text","title__newpost","container__content","filter","item","index","map","filteredItem","createdAt","content","length","container__button__wrapper","container__button"],"mappings":"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","sourcesContent":["import Link from 'next/link'\r\nimport Card from './posts/postcard'\r\nimport styles from './news.module.css'\r\nimport { useEffect, useState, useContext } from 'react'\r\nimport UserContext from '../components/UserContext'\r\nimport axios from 'axios'\r\n\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\n\r\n\r\nfunction News(props) {\r\n\r\n  const { loading, data } = useQuery(FETCH_POSTS_QUERY);\r\n\r\n  console.log(data);\r\n\r\n  const { loginStatus, toggleLogin } = useContext(UserContext);\r\n  const [feedLimit, setFeedLimit] = useState(6);\r\n  const [cardPost, updateCardPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // axios.get('http://localhost:3000/news-posts.json')\r\n    // .then((res) => {\r\n    //   updateCardPosts(res.data);\r\n    // })\r\n\r\n    updateCardPosts(data.posts);\r\n  },[]);\r\n\r\n  function updateFeedLimit() {\r\n    setFeedLimit(feedLimit * 2);\r\n  }\r\n\r\n  if(loading){\r\n    <h1>Nothing</h1>\r\n  } else {\r\n    return (\r\n      <div className={styles.news__container}>\r\n        <div className={styles.container__title}>\r\n          <h2 className={styles.title__text}>News</h2>\r\n          { loginStatus ?\r\n            <Link href=\"/posts/createpost\">\r\n              <a className={styles.title__newpost}>\r\n                Create New Post\r\n              </a>\r\n            </Link>\r\n            : null\r\n          }\r\n        </div>\r\n        <div className={styles.container__content}>\r\n          {\r\n            cardPost.filter((item, index) => (index < feedLimit))\r\n            .map((filteredItem, index) => \r\n              (\r\n                <Link href=\"/posts/viewpost\" key = {index}>\r\n                  <a>\r\n                    <Card \r\n                      date = {filteredItem.createdAt}\r\n                      description = {filteredItem.content}\r\n                    />\r\n                  </a>\r\n                </Link>\r\n              )\r\n            )\r\n          }\r\n        </div>\r\n        {\r\n          cardPost.length > feedLimit \r\n          ? <div className={styles.container__button__wrapper}>\r\n              <button \r\n                className={styles.container__button}\r\n                onClick={updateFeedLimit}\r\n              >\r\n                Load More\r\n              </button>\r\n            </div>\r\n          : null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst FETCH_POSTS_QUERY = gql`\r\n  {\r\n    posts {\r\n      id content createdAt\r\n    }\r\n  }\r\n`\r\n\r\nexport default News;"]},"metadata":{},"sourceType":"module"}