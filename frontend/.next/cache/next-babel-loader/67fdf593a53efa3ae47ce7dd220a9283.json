{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/Kobeboy/Desktop/frontend-exam/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\frontend-exam\\\\frontend\\\\components\\\\news.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    posts {\\n      id title createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport Card from './posts/postcard';\nimport styles from './news.module.css';\nimport { useState, useEffect, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport UserContext from './UserContext';\n\nfunction News() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(FETCH_POSTS_QUERY),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  var _useContext = useContext(UserContext),\n      isLogin = _useContext.isLogin;\n\n  var _useState = useState(6),\n      feedLimit = _useState[0],\n      setFeedLimit = _useState[1];\n\n  function updateFeedLimit() {\n    setFeedLimit(feedLimit * 2);\n  }\n\n  return __jsx(\"div\", {\n    className: styles.news__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.container__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: styles.title__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"News\"), isLogin ? __jsx(Link, {\n    href: \"/posts/createpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: styles.title__newpost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Create New Post\")) : null), data && __jsx(\"div\", {\n    className: styles.container__content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, data.posts.filter(function (item, index) {\n    return index < feedLimit;\n  }).map(function (filteredItem) {\n    return __jsx(Link, {\n      href: {\n        pathname: '/posts/[postId]',\n        query: {\n          postId: filteredItem.id\n        }\n      },\n      key: filteredItem.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, __jsx(Card, {\n      date: filteredItem.createdAt,\n      description: filteredItem.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    })));\n  })), data && data.posts.length > feedLimit ? __jsx(\"div\", {\n    className: styles.container__button__wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: styles.container__button,\n    onClick: updateFeedLimit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Load More\")) : null);\n}\n\n_s(News, \"ZNfjskSsi1ypIFsn2h5sjB3PhGg=\", false, function () {\n  return [useQuery];\n});\n\n_c = News;\nvar FETCH_POSTS_QUERY = gql(_templateObject());\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/frontend-exam/frontend/components/news.js"],"names":["Link","Card","styles","useState","useEffect","useContext","useQuery","gql","UserContext","News","FETCH_POSTS_QUERY","loading","data","isLogin","feedLimit","setFeedLimit","updateFeedLimit","news__container","container__title","title__text","title__newpost","container__content","posts","filter","item","index","map","filteredItem","pathname","query","postId","id","createdAt","title","length","container__button__wrapper","container__button"],"mappings":"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","sourcesContent":["import Link from 'next/link'\r\nimport Card from './posts/postcard'\r\nimport styles from './news.module.css'\r\nimport { useState, useEffect, useContext } from 'react'\r\n\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport UserContext from './UserContext'\r\n\r\n\r\nfunction News() {\r\n\r\n  const { loading, data } = useQuery(FETCH_POSTS_QUERY);\r\n  const { isLogin } = useContext(UserContext);\r\n  const [feedLimit, setFeedLimit] = useState(6);\r\n\r\n  function updateFeedLimit() {\r\n    setFeedLimit(feedLimit * 2);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.news__container}>\r\n      <div className={styles.container__title}>\r\n        <h2 className={styles.title__text}>News</h2>\r\n        { isLogin ?\r\n          <Link href=\"/posts/createpost\">\r\n            <a className={styles.title__newpost}>\r\n              Create New Post\r\n            </a>\r\n          </Link>\r\n          : null\r\n        }\r\n      </div>\r\n      { data && \r\n        <div className={styles.container__content}>\r\n          {\r\n            data.posts.filter((item, index) => (index < feedLimit))\r\n            .map((filteredItem) => \r\n              (\r\n                <Link \r\n                  href={{\r\n                    pathname: '/posts/[postId]',\r\n                    query: { postId: filteredItem.id }\r\n                  }} \r\n                  key = {filteredItem.id}>\r\n                  <a>\r\n                    <Card \r\n                      date = {filteredItem.createdAt}\r\n                      description = {filteredItem.title}\r\n                    />\r\n                  </a>\r\n                </Link>\r\n              )\r\n            )\r\n          }\r\n        </div>\r\n      }\r\n      {\r\n        (data && (data.posts.length > feedLimit)) \r\n        ? <div className={styles.container__button__wrapper}>\r\n            <button \r\n              className={styles.container__button}\r\n              onClick={updateFeedLimit}\r\n            >\r\n              Load More\r\n            </button>\r\n          </div>\r\n        : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst FETCH_POSTS_QUERY = gql`\r\n  {\r\n    posts {\r\n      id title createdAt\r\n    }\r\n  }\r\n`\r\n\r\nexport default News;"]},"metadata":{},"sourceType":"module"}