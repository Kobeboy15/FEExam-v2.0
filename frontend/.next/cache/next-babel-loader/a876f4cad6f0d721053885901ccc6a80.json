{"ast":null,"code":"import _extends from \"C:/Users/Kobeboy/Desktop/FE_EXAM(CLEANUP)/frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"C:/Users/Kobeboy/Desktop/FE_EXAM(CLEANUP)/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\FE_EXAM(CLEANUP)\\\\frontend\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport '../styles/global.css';\nimport ApolloClient from \"apollo-client\";\nimport UserContext from '../components/UserContext';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { setContext } from '@apollo/client/link/context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { useEffect, useState } from 'react';\nexport default function App(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState(false),\n      isLogIn = _useState[0],\n      setIsLogIn = _useState[1];\n\n  var httpLink = createHttpLink({\n    uri: \"http://localhost:4000\"\n  });\n  var authLink = setContext(function (_, _ref2) {\n    var headers = _ref2.headers;\n    var token = localStorage.getItem('token');\n    return {\n      headers: _objectSpread(_objectSpread({}, headers), {}, {\n        authorization: token ? token : \"\"\n      })\n    };\n  });\n  var client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link: authLink.concat(httpLink)\n  });\n  useEffect(function () {\n    if (localStorage.getItem('token')) {\n      setIsLogIn(true);\n    }\n  }, []);\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(UserContext.Provider, {\n    value: {\n      isLogin: isLogIn,\n      setLogin: setIsLogIn\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }))));\n}\n\n_s(App, \"SBg7YYAoKl7X83MGZmkc9y0Q3rQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/FE_EXAM(CLEANUP)/frontend/pages/_app.js"],"names":["ApolloClient","UserContext","ApolloProvider","setContext","InMemoryCache","createHttpLink","useEffect","useState","App","Component","pageProps","isLogIn","setIsLogIn","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","cache","link","concat","isLogin","setLogin"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,sBAAP;AACA,OAAOA,YAAP,MAAyB,eAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,GAAT,OAAuC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBAEtBH,QAAQ,CAAC,KAAD,CAFc;AAAA,MAE7CI,OAF6C;AAAA,MAEpCC,UAFoC;;AAGpD,MAAMC,QAAQ,GAAGR,cAAc,CAAC;AAC9BS,IAAAA,GAAG,EAAE;AADyB,GAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGZ,UAAU,CAAC,UAACa,CAAD,SAAoB;AAAA,QAAdC,OAAc,SAAdA,OAAc;AAC9C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAO;AACLH,MAAAA,OAAO,kCACFA,OADE;AAELI,QAAAA,aAAa,EAAEH,KAAK,GAAGA,KAAH,GAAW;AAF1B;AADF,KAAP;AAMD,GAR0B,CAA3B;AAUA,MAAMI,MAAM,GAAG,IAAItB,YAAJ,CAAiB;AAC9BuB,IAAAA,KAAK,EAAE,IAAInB,aAAJ,EADuB;AAE9BoB,IAAAA,IAAI,EAAET,QAAQ,CAACU,MAAT,CAAgBZ,QAAhB;AAFwB,GAAjB,CAAf;AAKAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGa,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EAAiC;AAC/BR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEU,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEI,MAAAA,OAAO,EAAEf,OAAX;AAAoBgB,MAAAA,QAAQ,EAAEf;AAA9B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD;;GAnCuBF,G;;KAAAA,G","sourcesContent":["import '../styles/global.css'\r\nimport ApolloClient from \"apollo-client\"\r\nimport UserContext from '../components/UserContext'\r\nimport { ApolloProvider } from '@apollo/react-hooks'\r\nimport { setContext } from '@apollo/client/link/context'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport default function App({ Component, pageProps }) {\r\n\r\n  const [isLogIn, setIsLogIn] = useState(false);\r\n  const httpLink = createHttpLink({\r\n    uri: \"http://localhost:4000\"\r\n  })\r\n  \r\n  const authLink = setContext((_, { headers }) => {\r\n    const token = localStorage.getItem('token');\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: token ? token : \"\",\r\n      }\r\n    }\r\n  });\r\n\r\n  const client = new ApolloClient({\r\n    cache: new InMemoryCache(),\r\n    link: authLink.concat(httpLink)\r\n  })\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem('token')){\r\n      setIsLogIn(true);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <UserContext.Provider value={{ isLogin: isLogIn, setLogin: setIsLogIn }}>\r\n        <Component {...pageProps} />\r\n      </UserContext.Provider>\r\n    </ApolloProvider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}