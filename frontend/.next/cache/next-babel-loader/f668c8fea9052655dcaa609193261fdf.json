{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\frontend-exam\\\\frontend\\\\pages\\\\posts\\\\[postId].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport Link from 'next/link';\nimport { useEffect, useState, useRef } from 'react';\nimport { useContext } from 'react';\nimport UserContext from '../../components/UserContext';\nimport Navbar from '../../components/navbar';\nimport Footer from '../../components/footer';\nimport styles from './viewpost.module.css';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { useRouter } from 'next/router';\nimport Loading from '../../components/loading';\n\nfunction ViewPost() {\n  const uploadImage = useRef(null);\n  const router = useRouter();\n  const {\n    postId\n  } = router.query;\n  const {\n    0: postDetails,\n    1: setPostDetails\n  } = useState({});\n  const {\n    isLogin\n  } = useContext(UserContext);\n  const {\n    0: isEditing,\n    1: setEditStatus\n  } = useState(false);\n  const {\n    0: imgValue,\n    1: setImgValue\n  } = useState('');\n  const {\n    0: commentContent,\n    1: setCommentContent\n  } = useState('');\n  const {\n    0: tempValues,\n    1: setTempValues\n  } = useState({\n    id: null,\n    title: '',\n    content: '',\n    image: ''\n  });\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId: Number(postId)\n    }\n  });\n\n  const handleComment = event => {\n    setCommentContent(event.target.value);\n  };\n\n  const onChange = event => {\n    setTempValues(_objectSpread(_objectSpread({}, tempValues), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const [addComment, {\n    loadingComment\n  }] = useMutation(ADD_COMMENT, {\n    update(_, result) {\n      let commentArray = postDetails.comments;\n      let newComment = {\n        id: result.data.addComment.id,\n        content: result.data.addComment.content,\n        createdAt: result.data.addComment.createdAt\n      };\n      commentArray.unshift(newComment);\n      setCommentContent(\" \");\n      setPostDetails(_objectSpread(_objectSpread({}, postDetails), {}, {\n        ['comments']: commentArray\n      }));\n    },\n\n    onError(err) {\n      console.log(err);\n    },\n\n    variables: {\n      postId: Number(postId),\n      content: commentContent\n    }\n  });\n  const [updatePost, {\n    loadingUpdate\n  }] = useMutation(UPDATE_POST, {\n    update(_, result) {\n      location.reload();\n    },\n\n    onError(err) {\n      console.log(err);\n    },\n\n    variables: {\n      id: tempValues.id,\n      title: tempValues.title,\n      content: tempValues.content,\n      image: imgValue\n    }\n  });\n\n  const handleEditPost = () => {\n    console.log(data);\n    let tempObject = {\n      id: data.post.id,\n      title: data.post.title,\n      content: data.post.content,\n      image: data.post.image\n    };\n    setTempValues(tempObject);\n    setEditStatus(true);\n  };\n\n  const cancelEditPost = () => {\n    var res = confirm(\"Are you sure you want to cancel changes?\");\n\n    if (res) {\n      let tempObject = {\n        id: data.post.id,\n        title: data.post.title,\n        content: data.post.content\n      };\n      setImgValue(data.post.image);\n      setTempValues(tempObject);\n      setEditStatus(false);\n    }\n  };\n\n  const saveEditPost = () => {\n    updatePost();\n    setEditStatus(false);\n  };\n\n  const handleImageUpload = event => {\n    uploadImage.current.click();\n  };\n\n  const fileDataURL = file => new Promise((resolve, reject) => {\n    let fr = new FileReader();\n\n    fr.onload = () => resolve(fr.result);\n\n    fr.onerror = reject;\n    fr.readAsDataURL(file);\n  });\n\n  const handleImage = event => {\n    if (event.target.files[0]) {\n      fileDataURL(event.target.files[0]).then(res => {\n        setImgValue(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (data) {\n      setPostDetails(data.post);\n    }\n  }, [data]);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: styles.viewpost__loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, postDetails && __jsx(\"div\", {\n      className: styles.viewpost__container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, __jsx(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }), postDetails.title ? __jsx(\"div\", {\n      className: styles.navigation__header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: styles.navigation__content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, __jsx(\"a\", {\n      className: styles.content__text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, \"HOME\")), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, \"\\xA0\\xA0\", ' > ', \"\\xA0\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, \"\\xA0\", postDetails.title))) : null, __jsx(\"div\", {\n      className: styles.navigation__body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, isLogin ? __jsx(\"div\", {\n      className: styles.body__action,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, isEditing ? __jsx(\"div\", {\n      className: styles.action__container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }, __jsx(\"p\", {\n      className: styles.action__text,\n      onClick: saveEditPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, \"Save Post\"), __jsx(\"p\", {\n      className: styles.action__text,\n      onClick: cancelEditPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, \"Cancel\")) : __jsx(\"p\", {\n      className: styles.action__text,\n      onClick: handleEditPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, \"Edit Post\")) : null, postDetails ? __jsx(\"div\", {\n      className: styles.body__details,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      className: styles.details__date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, postDetails.createdAt ? data.post.createdAt.slice(0, 10) : null), !isEditing ? __jsx(\"h2\", {\n      className: styles.details__title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, postDetails.title) : __jsx(\"textarea\", {\n      placeholder: \"title\",\n      name: \"title\",\n      onChange: onChange,\n      defaultValue: tempValues.title,\n      className: `${styles.details__title} + ${styles.details__title__text}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: styles.details__container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, isEditing ? __jsx(\"div\", {\n      className: styles.details__,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 23\n      }\n    }, __jsx(\"button\", {\n      className: styles.details__upload_image,\n      onClick: handleImageUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, \"Upload Image\"), __jsx(\"input\", {\n      name: \"myfile\",\n      type: \"file\",\n      ref: uploadImage,\n      onChange: handleImage,\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    })) : null, __jsx(\"img\", {\n      className: styles.details__image,\n      src: imgValue ? imgValue : postDetails.image ? postDetails.image : \"/images/girl.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    })), !isEditing ? __jsx(\"p\", {\n      className: styles.details__body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, postDetails.content) : __jsx(\"textarea\", {\n      placeholder: \"Content\",\n      name: \"content\",\n      onChange: onChange,\n      defaultValue: tempValues.content,\n      className: `${styles.details__body} + ${styles.details__body__text}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 23\n      }\n    })) : null, __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      className: styles.body__comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      className: styles.comments__title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, \"COMMENT\"), postDetails.comments ? postDetails.comments.map(comment => {\n      return __jsx(\"div\", {\n        key: comment.id,\n        className: styles.comments__item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 23\n        }\n      }, __jsx(\"p\", {\n        className: styles.item__content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }\n      }, comment.content), __jsx(\"p\", {\n        className: styles.item__date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }\n      }, comment.createdAt.slice(0, 10)));\n    }) : null, __jsx(\"div\", {\n      className: styles.comments__input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, __jsx(\"textarea\", {\n      placeholder: \"Write comment\",\n      name: \"comment\",\n      onChange: handleComment,\n      defaultValue: commentContent,\n      className: styles.input__textarea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 19\n      }\n    }), __jsx(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      onClick: addComment,\n      className: styles.input__submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 19\n      }\n    }))))), __jsx(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nexport const getServerSideProps = async ({\n  params\n}) => {\n  return {\n    props: {}\n  };\n};\nconst FETCH_POST_QUERY = gql`\n  query Post($postId: Int!){\n    post(id: $postId) {\n      id \n      title \n      content \n      image \n      createdAt \n      comments{\n        id content createdAt\n      }\n    }\n  }\n`;\nconst UPDATE_POST = gql`\n  mutation updatePost(\n    $id: Int!\n    $title:String!\n    $content:String\n    $image:String\n  ){\n    updatePost(\n      post: {\n        id: $id,\n        title: $title,\n        content: $content,\n        image: $image\t\n    })\n    {\n      title\n      content \n      image\n      comments{\n        id content createdAt\n      }\n    }\n  }\n`;\nconst ADD_COMMENT = gql`\n  mutation addComment(\n    $postId: Int!\n    $content: String!\n  ){\n    addComment(\n      postId: $postId,\n      content: $content\n    )\n    {\n      id createdAt content\n    }\n  }\n`;\nexport default ViewPost;","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/frontend-exam/frontend/pages/posts/[postId].js"],"names":["axios","Link","useEffect","useState","useRef","useContext","UserContext","Navbar","Footer","styles","useMutation","useQuery","gql","useRouter","Loading","ViewPost","uploadImage","router","postId","query","postDetails","setPostDetails","isLogin","isEditing","setEditStatus","imgValue","setImgValue","commentContent","setCommentContent","tempValues","setTempValues","id","title","content","image","loading","error","data","FETCH_POST_QUERY","variables","Number","handleComment","event","target","value","onChange","name","addComment","loadingComment","ADD_COMMENT","update","_","result","commentArray","comments","newComment","createdAt","unshift","onError","err","console","log","updatePost","loadingUpdate","UPDATE_POST","location","reload","handleEditPost","tempObject","post","cancelEditPost","res","confirm","saveEditPost","handleImageUpload","current","click","fileDataURL","file","Promise","resolve","reject","fr","FileReader","onload","onerror","readAsDataURL","handleImage","files","then","catch","viewpost__loading","viewpost__container","navigation__header","navigation__content","content__text","navigation__body","body__action","action__container","action__text","body__details","details__date","slice","details__title","details__title__text","details__container","details__","details__upload_image","details__image","details__body","details__body__text","body__comments","comments__title","map","comment","comments__item","item__content","item__date","comments__input","input__textarea","input__submit","getServerSideProps","params","props"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport Link from 'next/link'\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { useContext } from 'react'\r\nimport UserContext from '../../components/UserContext'\r\nimport Navbar from '../../components/navbar';\r\nimport Footer from '../../components/footer';\r\nimport styles from './viewpost.module.css';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport { useRouter } from 'next/router'\r\n\r\nimport Loading from '../../components/loading'\r\n\r\n\r\n\r\nfunction ViewPost() {\r\n  const uploadImage = useRef(null);\r\n  const router = useRouter();\r\n  const { postId } = router.query;\r\n  const [postDetails, setPostDetails] = useState({});\r\n  const { isLogin } = useContext(UserContext);\r\n  const [isEditing, setEditStatus] = useState(false);\r\n  const [imgValue, setImgValue] = useState('');\r\n  const [commentContent, setCommentContent] = useState('');\r\n  const [tempValues, setTempValues] = useState({\r\n    id: null,\r\n    title: '',\r\n    content: '',\r\n    image: ''\r\n  })\r\n\r\n  const { loading, error, data } = useQuery(FETCH_POST_QUERY, {\r\n    variables: { \r\n      postId: Number(postId) \r\n    }\r\n  })\r\n\r\n  const handleComment = (event) => {\r\n    setCommentContent(event.target.value);\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    setTempValues({...tempValues, [event.target.name]: event.target.value});\r\n  }\r\n\r\n  const [addComment, { loadingComment }] = useMutation(ADD_COMMENT, {\r\n    update(_,result) {\r\n      let commentArray = postDetails.comments;\r\n      let newComment = {\r\n        id: result.data.addComment.id,\r\n        content: result.data.addComment.content,\r\n        createdAt: result.data.addComment.createdAt\r\n      }\r\n      commentArray.unshift(newComment);\r\n      setCommentContent(\" \");\r\n      setPostDetails({...postDetails, ['comments']: commentArray});\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n    },\r\n    variables: {\r\n      postId: Number(postId),\r\n      content: commentContent\r\n    }\r\n  })\r\n\r\n  const [updatePost, { loadingUpdate }] = useMutation(UPDATE_POST, {\r\n    update(_, result) {\r\n      location.reload();\r\n    },\r\n    onError(err){\r\n      console.log(err);\r\n    },\r\n    variables: {\r\n      id: tempValues.id,\r\n      title: tempValues.title,\r\n      content: tempValues.content,\r\n      image: imgValue\r\n    }\r\n  })\r\n\r\n  const handleEditPost = () => {\r\n    console.log(data);\r\n    let tempObject = {\r\n      id: data.post.id,\r\n      title: data.post.title,\r\n      content: data.post.content,\r\n      image: data.post.image\r\n    }\r\n    setTempValues(tempObject);\r\n    setEditStatus(true);\r\n  }\r\n\r\n  const cancelEditPost = () => {\r\n    var res = confirm(\"Are you sure you want to cancel changes?\");\r\n    if(res){\r\n      let tempObject = {\r\n        id: data.post.id,\r\n        title: data.post.title,\r\n        content: data.post.content,\r\n      }\r\n      setImgValue(data.post.image);\r\n      setTempValues(tempObject);\r\n      setEditStatus(false);\r\n    }\r\n  }\r\n\r\n  const saveEditPost = () => {\r\n    updatePost();\r\n    setEditStatus(false);\r\n  }\r\n\r\n  const handleImageUpload = (event) => {\r\n    uploadImage.current.click();\r\n  }\r\n\r\n  const fileDataURL = file => new Promise((resolve, reject) => {\r\n    let fr = new FileReader();\r\n    fr.onload = () => resolve(fr.result);\r\n    fr.onerror = reject;\r\n    fr.readAsDataURL(file);\r\n  })\r\n\r\n  const handleImage = (event) => {\r\n    if(event.target.files[0]){\r\n      fileDataURL(event.target.files[0])\r\n      .then(res => {\r\n        setImgValue(res);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(data){\r\n      setPostDetails(data.post);\r\n    }\r\n  }, [data])\r\n\r\n  if(loading){\r\n    return (\r\n      <div className={styles.viewpost__loading}>\r\n        <Loading />\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        { postDetails &&\r\n          <div className={styles.viewpost__container}>\r\n            <Navbar />\r\n            { postDetails.title ?\r\n              <div className={styles.navigation__header}>\r\n                <div className={styles.navigation__content}>\r\n                  <Link href=\"/\">\r\n                    <a className={styles.content__text}>HOME</a>\r\n                  </Link>\r\n                  <p>&nbsp;&nbsp;{' > '}&nbsp;</p>\r\n                  <p>&nbsp;{postDetails.title}</p>\r\n                </div>\r\n              </div>\r\n              : null\r\n            }\r\n            <div className={styles.navigation__body}>\r\n              { isLogin ?\r\n                <div className={styles.body__action}>\r\n                  { isEditing ?\r\n                  <div className={styles.action__container}>\r\n                    <p \r\n                      className={styles.action__text}\r\n                      onClick={saveEditPost}\r\n                    >\r\n                      Save Post</p>\r\n                    <p \r\n                      className={styles.action__text}\r\n                      onClick={cancelEditPost}\r\n                    >Cancel</p>\r\n                  </div>\r\n                  : <p \r\n                      className={styles.action__text}\r\n                      onClick={handleEditPost}\r\n                    >Edit Post</p>\r\n                  }\r\n                </div>\r\n                : null\r\n              }\r\n              { postDetails ?\r\n                <div className={styles.body__details}>\r\n                  <p className={styles.details__date}>\r\n                    {postDetails.createdAt ? data.post.createdAt.slice(0,10) : null}\r\n                  </p>\r\n                  { !isEditing \r\n                  ? <h2 className={styles.details__title}>{postDetails.title}</h2>\r\n                  : <textarea\r\n                      placeholder=\"title\"\r\n                      name=\"title\"\r\n                      onChange={onChange}\r\n                      defaultValue={tempValues.title}\r\n                      className={`${styles.details__title} + ${styles.details__title__text}`}\r\n                    />\r\n                  }\r\n                  <div className={styles.details__container}>\r\n                    { isEditing \r\n                      ? \r\n                      <div className={styles.details__}>\r\n                        <button\r\n                          className={styles.details__upload_image}\r\n                          onClick={handleImageUpload}\r\n                        >\r\n                          Upload Image\r\n                        </button>\r\n                        <input \r\n                          name=\"myfile\" \r\n                          type=\"file\"\r\n                          ref={uploadImage} \r\n                          onChange={handleImage}\r\n                          hidden\r\n                        />\r\n                      </div>\r\n                      : null\r\n                    }\r\n                    <img\r\n                      className={styles.details__image} \r\n                      src={imgValue ? imgValue \r\n                        :(postDetails.image ? postDetails.image : \"/images/girl.png\")}\r\n                    />\r\n                  </div>\r\n                  { !isEditing\r\n                    ? <p className={styles.details__body}>{postDetails.content}</p>\r\n                    : <textarea\r\n                        placeholder=\"Content\"\r\n                        name=\"content\"\r\n                        onChange={onChange}\r\n                        defaultValue={tempValues.content}\r\n                        className={`${styles.details__body} + ${styles.details__body__text}`}\r\n                      />\r\n                  }\r\n                </div>\r\n                : null\r\n              }\r\n              <hr />\r\n              <div className={styles.body__comments}>\r\n                <h2 className={styles.comments__title}>COMMENT</h2>\r\n                { postDetails.comments ?\r\n                  postDetails.comments.map((comment) => {\r\n                    return(\r\n                      <div key={comment.id} className={styles.comments__item}>\r\n                        <p className={styles.item__content}>{comment.content}</p>\r\n                        <p className={styles.item__date}>{comment.createdAt.slice(0,10)}</p>\r\n                      </div>\r\n                    )\r\n                  })\r\n                  : null\r\n                }\r\n                <div className={styles.comments__input}>\r\n                  <textarea\r\n                    placeholder=\"Write comment\" \r\n                    name=\"comment\"\r\n                    onChange={handleComment}\r\n                    defaultValue={commentContent}\r\n                    className={styles.input__textarea} \r\n                  />\r\n                  <input \r\n                    type=\"button\" \r\n                    value=\"Submit\"\r\n                    onClick={addComment}\r\n                    className={styles.input__submit}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const getServerSideProps = async ({params}) => {\r\n  return {props: {}};\r\n}\r\n\r\nconst FETCH_POST_QUERY = gql`\r\n  query Post($postId: Int!){\r\n    post(id: $postId) {\r\n      id \r\n      title \r\n      content \r\n      image \r\n      createdAt \r\n      comments{\r\n        id content createdAt\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst UPDATE_POST = gql`\r\n  mutation updatePost(\r\n    $id: Int!\r\n    $title:String!\r\n    $content:String\r\n    $image:String\r\n  ){\r\n    updatePost(\r\n      post: {\r\n        id: $id,\r\n        title: $title,\r\n        content: $content,\r\n        image: $image\t\r\n    })\r\n    {\r\n      title\r\n      content \r\n      image\r\n      comments{\r\n        id content createdAt\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst ADD_COMMENT = gql`\r\n  mutation addComment(\r\n    $postId: Int!\r\n    $content: String!\r\n  ){\r\n    addComment(\r\n      postId: $postId,\r\n      content: $content\r\n    )\r\n    {\r\n      id createdAt content\r\n    }\r\n  }\r\n`\r\n\r\n\r\nexport default ViewPost;\r\n"]},"metadata":{},"sourceType":"module"}