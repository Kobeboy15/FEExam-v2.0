{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\frontend-exam\\\\frontend\\\\components\\\\slideshow.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport styles from './slideshow.module.css';\nimport axios from 'axios';\nexport default function SlideShow() {\n  const {\n    0: showSlide,\n    1: updateSlide\n  } = useState(false);\n  const {\n    0: slideImages,\n    1: updateImages\n  } = useState([]);\n  const {\n    0: currentIndex,\n    1: updateCurrentIndex\n  } = useState(0);\n  const {\n    0: prevIndex,\n    1: updatePrevIndex\n  } = useState();\n  const {\n    0: nextIndex,\n    1: updateNextIndex\n  } = useState();\n  useEffect(() => {\n    axios.get('http://localhost:3000/images-list.json').then(res => {\n      console.log(res.data);\n      getNext();\n      getPrev();\n      updateImages(res.data);\n      updateSlide(true);\n    });\n  }, []);\n\n  const getNext = () => {\n    if (currentIndex != 0 && Math.abs(currentIndex + 1) % slideImages.length == 0) {\n      updatePrevIndex(0);\n    } else {\n      updatePrevIndex(currentIndex + 1);\n    }\n  };\n\n  const getPrev = () => {\n    if (currentIndex == 0) {\n      updateNextIndex(slideImages.length - 1);\n    } else {\n      updateNextIndex(currentIndex - 1);\n    }\n  };\n\n  const nextImage = () => {};\n\n  const prevImage = () => {};\n\n  const changePage = selectedPage => {\n    updateCurrentIndex(selectedPage);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.slideshow__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, showSlide ? __jsx(\"div\", {\n    className: styles.slideshow__actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"images/left.svg\",\n    alt: \"left arrow\",\n    className: styles.actions__arrows,\n    onClick: prevImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: styles.actions__selector,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, slideImages.map((item, index) => {\n    if (index == currentIndex) {\n      return __jsx(\"img\", {\n        src: \"images/CircleDark.svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 30\n        }\n      });\n    } else {\n      return __jsx(\"img\", {\n        src: \"images/CircleLight.svg\",\n        onClick: () => changePage(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 30\n        }\n      });\n    }\n  })), __jsx(\"img\", {\n    src: \"images/right.svg\",\n    alt: \"right arrow\",\n    className: styles.actions__arrows,\n    onClick: nextImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })) : null, showSlide ? __jsx(\"div\", {\n    className: styles.slideshow__image_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: slideImages[prevIndex].image_path,\n    className: styles.slideshow__image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), __jsx(\"img\", {\n    src: slideImages[currentIndex].image_path,\n    className: styles.slideshow__image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), __jsx(\"img\", {\n    src: slideImages[nextIndex].image_path,\n    className: styles.slideshow__image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })) : null);\n}","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/frontend-exam/frontend/components/slideshow.js"],"names":["useEffect","useState","styles","axios","SlideShow","showSlide","updateSlide","slideImages","updateImages","currentIndex","updateCurrentIndex","prevIndex","updatePrevIndex","nextIndex","updateNextIndex","get","then","res","console","log","data","getNext","getPrev","Math","abs","length","nextImage","prevImage","changePage","selectedPage","slideshow__container","slideshow__actions","actions__arrows","actions__selector","map","item","index","slideshow__image_wrapper","image_path","slideshow__image"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport styles from './slideshow.module.css'\r\nimport axios from 'axios'\r\n\r\nexport default function SlideShow() {\r\n\r\n  const [showSlide, updateSlide] = useState(false);\r\n  const [slideImages, updateImages] = useState([]);\r\n  const [currentIndex, updateCurrentIndex] = useState(0);\r\n  const [prevIndex, updatePrevIndex] = useState();\r\n  const [nextIndex, updateNextIndex] = useState();\r\n  \r\n  useEffect(() => {\r\n    axios.get('http://localhost:3000/images-list.json')\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      getNext();\r\n      getPrev();\r\n      updateImages(res.data);\r\n      updateSlide(true);\r\n    })\r\n  }, [])\r\n\r\n  const getNext = () => {\r\n    if(currentIndex != 0 && Math.abs(currentIndex + 1) % slideImages.length == 0){\r\n      updatePrevIndex(0);\r\n    } else {\r\n      updatePrevIndex(currentIndex + 1);\r\n    }\r\n  }\r\n\r\n  const getPrev = () => {\r\n    if(currentIndex == 0){\r\n      updateNextIndex(slideImages.length-1);\r\n    } else {\r\n      updateNextIndex(currentIndex - 1);\r\n    }\r\n  }\r\n\r\n  const nextImage = () => {\r\n    \r\n  }\r\n\r\n  const prevImage = () => {\r\n\r\n  }\r\n\r\n  const changePage = (selectedPage) => {\r\n    updateCurrentIndex(selectedPage);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.slideshow__container}>\r\n      { showSlide\r\n        ? <div className={styles.slideshow__actions}>\r\n            <img \r\n              src=\"images/left.svg\" \r\n              alt=\"left arrow\" \r\n              className={styles.actions__arrows}\r\n              onClick={prevImage}\r\n            />\r\n            <div className={styles.actions__selector}>\r\n              {\r\n                slideImages.map((item, index) => {\r\n                    if(index == currentIndex) {\r\n                      return <img src=\"images/CircleDark.svg\" />\r\n                    } else {\r\n                      return <img src=\"images/CircleLight.svg\" onClick={() => changePage(index)}/>\r\n                    }\r\n                })\r\n              }\r\n            </div>\r\n            <img \r\n              src=\"images/right.svg\" \r\n              alt=\"right arrow\" \r\n              className={styles.actions__arrows}\r\n              onClick={nextImage}\r\n            />\r\n          </div>\r\n        : null\r\n      }\r\n      { showSlide\r\n      ? <div className={styles.slideshow__image_wrapper}>\r\n        <img \r\n          src={slideImages[prevIndex].image_path} \r\n          className={styles.slideshow__image}\r\n        />\r\n        <img \r\n          src={slideImages[currentIndex].image_path} \r\n          className={styles.slideshow__image}\r\n        />\r\n        <img \r\n          src={slideImages[nextIndex].image_path} \r\n          className={styles.slideshow__image}\r\n        />\r\n      </div>\r\n      : null\r\n      }\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}