{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\frontend-exam\\\\frontend\\\\components\\\\news.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Card from './posts/postcard';\nimport styles from './news.module.css';\nimport { useState, useEffect, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport UserContext from './UserContext';\n\nfunction News(props) {\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_POSTS_QUERY);\n  const {\n    isLogin,\n    setLogin\n  } = useContext(UserContext);\n  const {\n    0: loginStatus,\n    1: setLoginStatus\n  } = useState(false);\n  const {\n    0: feedLimit,\n    1: setFeedLimit\n  } = useState(6);\n  useEffect(() => {\n    console.log(\"CHECK IS CONTEXT WORKS\");\n    console.log(isLogin);\n\n    if (localStorage.getItem('token')) {\n      setLoginStatus(true);\n    }\n  }, []);\n\n  function updateFeedLimit() {\n    setFeedLimit(feedLimit * 2);\n  }\n\n  return __jsx(\"div\", {\n    className: styles.news__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.container__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: styles.title__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"News\"), loginStatus ? __jsx(Link, {\n    href: \"/posts/createpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: styles.title__newpost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Create New Post\")) : null), data && __jsx(\"div\", {\n    className: styles.container__content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, data.posts.filter((item, index) => index < feedLimit).map(filteredItem => __jsx(Link, {\n    href: `/posts/${filteredItem.id}`,\n    key: filteredItem.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, __jsx(Card, {\n    date: filteredItem.createdAt,\n    description: filteredItem.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }))))), data && data.posts.length > feedLimit ? __jsx(\"div\", {\n    className: styles.container__button__wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: styles.container__button,\n    onClick: updateFeedLimit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Load More\")) : null);\n}\n\nconst FETCH_POSTS_QUERY = gql`\n  {\n    posts {\n      id content createdAt\n    }\n  }\n`;\nexport default News;","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/frontend-exam/frontend/components/news.js"],"names":["Link","Card","styles","useState","useEffect","useContext","useQuery","gql","UserContext","News","props","loading","data","FETCH_POSTS_QUERY","isLogin","setLogin","loginStatus","setLoginStatus","feedLimit","setFeedLimit","console","log","localStorage","getItem","updateFeedLimit","news__container","container__title","title__text","title__newpost","container__content","posts","filter","item","index","map","filteredItem","id","createdAt","content","length","container__button__wrapper","container__button"],"mappings":"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","sourcesContent":["import Link from 'next/link'\r\nimport Card from './posts/postcard'\r\nimport styles from './news.module.css'\r\nimport { useState, useEffect, useContext } from 'react'\r\n\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport UserContext from './UserContext'\r\n\r\n\r\nfunction News(props) {\r\n\r\n  const { loading, data } = useQuery(FETCH_POSTS_QUERY);\r\n  const { isLogin, setLogin } = useContext(UserContext);\r\n  const [loginStatus, setLoginStatus] = useState(false);\r\n  const [feedLimit, setFeedLimit] = useState(6);\r\n\r\n  useEffect(() => {\r\n    console.log(\"CHECK IS CONTEXT WORKS\");\r\n    console.log(isLogin);\r\n\r\n    if(localStorage.getItem('token')){\r\n      setLoginStatus(true);\r\n    }\r\n  }, [])\r\n\r\n  function updateFeedLimit() {\r\n    setFeedLimit(feedLimit * 2);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.news__container}>\r\n      <div className={styles.container__title}>\r\n        <h2 className={styles.title__text}>News</h2>\r\n        { loginStatus ?\r\n          <Link href=\"/posts/createpost\">\r\n            <a className={styles.title__newpost}>\r\n              Create New Post\r\n            </a>\r\n          </Link>\r\n          : null\r\n        }\r\n      </div>\r\n      { data && \r\n        <div className={styles.container__content}>\r\n          {\r\n            data.posts.filter((item, index) => (index < feedLimit))\r\n            .map((filteredItem) => \r\n              (\r\n                <Link href={`/posts/${filteredItem.id}`} key = {filteredItem.id}>\r\n                  <a>\r\n                    <Card \r\n                      date = {filteredItem.createdAt}\r\n                      description = {filteredItem.content}\r\n                    />\r\n                  </a>\r\n                </Link>\r\n              )\r\n            )\r\n          }\r\n        </div>\r\n      }\r\n      {\r\n        (data && (data.posts.length > feedLimit)) \r\n        ? <div className={styles.container__button__wrapper}>\r\n            <button \r\n              className={styles.container__button}\r\n              onClick={updateFeedLimit}\r\n            >\r\n              Load More\r\n            </button>\r\n          </div>\r\n        : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst FETCH_POSTS_QUERY = gql`\r\n  {\r\n    posts {\r\n      id content createdAt\r\n    }\r\n  }\r\n`\r\n\r\nexport default News;"]},"metadata":{},"sourceType":"module"}