{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\frontend-exam\\\\frontend\\\\components\\\\slideshow.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport styles from './slideshow.module.css';\nimport axios from 'axios';\nexport default function SlideShow() {\n  const {\n    0: slideImages,\n    1: updateImages\n  } = useState([]);\n  const {\n    0: currentIndex,\n    1: updateCurrentIndex\n  } = useState(0);\n  const {\n    0: slideDirection,\n    1: updateDirection\n  } = useState(null);\n  var buttonsDisabled = false;\n  useEffect(() => {\n    axios.get('http://localhost:3000/images-list.json').then(res => {\n      console.log(res.data);\n      updateImages(res.data);\n    });\n  }, []);\n\n  const getDirection = () => {\n    if (slideDirection) {\n      return slideDirection == 'left' ? 'slideshow__slideleft' : 'slideshow__slideright';\n    }\n  };\n\n  const getNext = () => {\n    if (currentIndex != 0 && Math.abs(currentIndex + 1) % slideImages.length == 0) {\n      return 0;\n    } else {\n      return currentIndex + 1;\n    }\n  };\n\n  const getPrev = () => {\n    if (currentIndex == 0) {\n      return slideImages.length - 1;\n    } else {\n      return currentIndex - 1;\n    }\n  };\n\n  const nextImage = () => {\n    console.log(buttonsDisabled);\n\n    if (!buttonsDisabled) {\n      buttonsDisabled = true;\n      console.log(buttonsDisabled);\n      updateDirection('left');\n      updateCurrentIndex(getNext());\n      setTimeout(() => {\n        updateDirection(null);\n        buttonsDisabled = false;\n      }, 1000);\n    }\n  };\n\n  const prevImage = () => {\n    if (!buttonsDisabled) {\n      buttonsDisabled = true;\n      console.log(buttonsDisabled);\n      updateDirection('right');\n      updateCurrentIndex(getPrev());\n      setTimeout(() => {\n        updateDirection(null);\n        buttonsDisabled = false;\n      }, 1000);\n    }\n  };\n\n  const changePage = selectedPage => {\n    if (!buttonsDisabled) {\n      buttonsDisabled = true;\n\n      if (selectedPage > currentIndex) {\n        updateDirection('left');\n        updateCurrentIndex(selectedPage);\n      } else {\n        updateDirection('right');\n        updateCurrentIndex(selectedPage);\n      }\n\n      setTimeout(() => {\n        updateDirection(null);\n        buttonsDisabled = false;\n      }, 1000);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.slideshow__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, slideImages ? __jsx(\"div\", {\n    className: styles.slideshow__actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"images/left.svg\",\n    alt: \"left arrow\",\n    className: styles.actions__arrows,\n    onClick: prevImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: styles.actions__selector,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, slideImages.map((item, index) => {\n    if (index == currentIndex) {\n      return __jsx(\"img\", {\n        src: \"images/CircleDark.svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 30\n        }\n      });\n    } else {\n      return __jsx(\"img\", {\n        src: \"images/CircleLight.svg\",\n        onClick: () => changePage(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 30\n        }\n      });\n    }\n  })), __jsx(\"img\", {\n    src: \"images/right.svg\",\n    alt: \"right arrow\",\n    className: styles.actions__arrows,\n    onClick: nextImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })) : null, slideImages.length > 0 ? __jsx(\"div\", {\n    className: styles.slideshow__image_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: slideImages[getPrev()].image_path,\n    className: `${styles.slideshow__image} ${slideDirection ? getDirection() : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), __jsx(\"img\", {\n    src: slideImages[currentIndex].image_path,\n    className: `${styles.slideshow__image} ${slideDirection ? getDirection() : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), __jsx(\"img\", {\n    src: slideImages[getNext()].image_path,\n    className: `${styles.slideshow__image} ${slideDirection ? getDirection() : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  })) : null);\n}","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/frontend-exam/frontend/components/slideshow.js"],"names":["useEffect","useState","styles","axios","SlideShow","slideImages","updateImages","currentIndex","updateCurrentIndex","slideDirection","updateDirection","buttonsDisabled","get","then","res","console","log","data","getDirection","getNext","Math","abs","length","getPrev","nextImage","setTimeout","prevImage","changePage","selectedPage","slideshow__container","slideshow__actions","actions__arrows","actions__selector","map","item","index","slideshow__image_wrapper","image_path","slideshow__image"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport styles from './slideshow.module.css'\r\nimport axios from 'axios'\r\n\r\nexport default function SlideShow() {\r\n\r\n  const [slideImages, updateImages] = useState([]);\r\n  const [currentIndex, updateCurrentIndex] = useState(0);\r\n  const [slideDirection, updateDirection] = useState(null);\r\n  var buttonsDisabled = false;\r\n  \r\n  useEffect(() => {\r\n    axios.get('http://localhost:3000/images-list.json')\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      updateImages(res.data);\r\n    })\r\n  }, [])\r\n\r\n  const getDirection = () => {\r\n    if(slideDirection){\r\n      return slideDirection == 'left' ? 'slideshow__slideleft': 'slideshow__slideright';\r\n    }\r\n  }\r\n\r\n  const getNext = () => {\r\n    if(currentIndex != 0 && Math.abs(currentIndex + 1) % slideImages.length == 0){\r\n      return 0;\r\n    } else {\r\n      return (currentIndex + 1);\r\n    }\r\n  }\r\n\r\n  const getPrev = () => {\r\n    if(currentIndex == 0){\r\n      return (slideImages.length-1);\r\n    } else {\r\n      return (currentIndex - 1);\r\n    }\r\n  }\r\n\r\n  const nextImage = () => {\r\n    console.log(buttonsDisabled);\r\n    if(!buttonsDisabled){\r\n      buttonsDisabled = true;\r\n      console.log(buttonsDisabled);\r\n      updateDirection('left');\r\n      updateCurrentIndex(getNext());\r\n      setTimeout(() => {\r\n        updateDirection(null);\r\n        buttonsDisabled = false;\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  const prevImage = () => {\r\n    if(!buttonsDisabled){\r\n      buttonsDisabled = true;\r\n      console.log(buttonsDisabled)\r\n      updateDirection('right');\r\n      updateCurrentIndex(getPrev());\r\n      setTimeout(() => {\r\n        updateDirection(null);\r\n        buttonsDisabled = false;\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  const changePage = (selectedPage) => {\r\n    if(!buttonsDisabled){\r\n      buttonsDisabled = true;\r\n      if(selectedPage > currentIndex){\r\n        updateDirection('left');\r\n        updateCurrentIndex(selectedPage);\r\n      } else {\r\n        updateDirection('right');\r\n        updateCurrentIndex(selectedPage);\r\n      }\r\n      setTimeout(() => {\r\n        updateDirection(null);\r\n        buttonsDisabled = false;\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.slideshow__container}>\r\n      { slideImages\r\n        ? <div className={styles.slideshow__actions}>\r\n            <img \r\n              src=\"images/left.svg\" \r\n              alt=\"left arrow\" \r\n              className={styles.actions__arrows}\r\n              onClick={prevImage}\r\n            />\r\n            <div className={styles.actions__selector}>\r\n              {\r\n                slideImages.map((item, index) => {\r\n                    if(index == currentIndex) {\r\n                      return <img src=\"images/CircleDark.svg\" />\r\n                    } else {\r\n                      return <img src=\"images/CircleLight.svg\" onClick={() => changePage(index)}/>\r\n                    }\r\n                })\r\n              }\r\n            </div>\r\n            <img \r\n              src=\"images/right.svg\" \r\n              alt=\"right arrow\" \r\n              className={styles.actions__arrows}\r\n              onClick={nextImage}\r\n            />\r\n          </div>\r\n        : null\r\n      }\r\n      { slideImages.length > 0\r\n      ? <div className={styles.slideshow__image_wrapper}>\r\n        <img \r\n          src={slideImages[getPrev()].image_path} \r\n          className={`${styles.slideshow__image} ${slideDirection ? getDirection(): ''}`}\r\n        />\r\n        <img \r\n          src={slideImages[currentIndex].image_path} \r\n          className={`${styles.slideshow__image} ${slideDirection ? getDirection(): ''}`}\r\n        />\r\n        <img \r\n          src={slideImages[getNext()].image_path} \r\n          className={`${styles.slideshow__image} ${slideDirection ? getDirection(): ''}`}\r\n        />\r\n      </div>\r\n      : null\r\n      }\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}