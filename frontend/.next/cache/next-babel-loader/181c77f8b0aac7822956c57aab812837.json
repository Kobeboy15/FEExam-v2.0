{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\frontend-exam\\\\frontend\\\\pages\\\\posts\\\\[postId].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport Link from 'next/link';\nimport { useEffect, useState, useRef } from 'react';\nimport { useContext } from 'react';\nimport UserContext from '../../components/UserContext';\nimport Navbar from '../../components/navbar';\nimport Footer from '../../components/footer';\nimport styles from './viewpost.module.css';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { useRouter } from 'next/router';\n\nfunction ViewPost() {\n  const router = useRouter();\n  const {\n    postId\n  } = router.query;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId: Number(postId)\n    }\n  });\n  const {\n    isLogin\n  } = useContext(UserContext);\n  const {\n    0: newComment,\n    1: updateNewComment\n  } = useState('');\n  const {\n    0: isEditing,\n    1: setEditStatus\n  } = useState(false);\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    title: '',\n    content: '',\n    image: ''\n  });\n  const uploadImage = useRef(null);\n\n  const cancelEditPost = () => {};\n\n  const saveEditPost = () => {};\n\n  const handleImageUpload = event => {\n    uploadImage.current.click();\n  };\n\n  const handleImage = event => {\n    if (event.target.files[0]) {\n      setTempImage(URL.createObjectURL(event.target.files[0]));\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, data && __jsx(\"div\", {\n    className: styles.viewpost__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), data.post.title ? __jsx(\"div\", {\n    className: styles.navigation__header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: styles.navigation__content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    className: styles.content__text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, \"HOME\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"\\xA0\\xA0\", ' > ', \"\\xA0\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"\\xA0\", data.post.title))) : null, __jsx(\"div\", {\n    className: styles.navigation__body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, isLogin ? __jsx(\"div\", {\n    className: styles.body__action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, isEditing ? __jsx(\"div\", {\n    className: styles.action__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    className: styles.action__text,\n    onClick: saveEditPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, \"Save Post\"), __jsx(\"p\", {\n    className: styles.action__text,\n    onClick: cancelEditPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, \"Cancel\")) : __jsx(\"p\", {\n    className: styles.action__text,\n    onClick: () => setEditStatus(!isEditing),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, \"Edit Post\")) : null, data ? __jsx(\"div\", {\n    className: styles.body__details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: styles.details__date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, data.post.createdAt ? data.post.createdAt.slice(0, 10) : null), !isEditing ? __jsx(\"h2\", {\n    className: styles.details__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, data.post.title) : __jsx(\"textarea\", {\n    defaultValue: tempTitle,\n    onChange: handleTitle,\n    className: `${styles.details__title} + ${styles.details__title__text}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    className: styles.details__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, isEditing ? __jsx(\"div\", {\n    className: styles.details__,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    className: styles.details__upload_image,\n    onClick: handleImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }\n  }, \"Upload Image\"), __jsx(\"input\", {\n    name: \"myfile\",\n    type: \"file\",\n    ref: uploadImage,\n    onChange: handleImage,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  })) : null, __jsx(\"img\", {\n    className: styles.details__image,\n    src: data.post.image ? data.post.image : \"/images/girl.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  })), !isEditing ? __jsx(\"p\", {\n    className: styles.details__body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, data.post.content) : __jsx(\"textarea\", {\n    defaultValue: tempBody,\n    onChange: handleBody,\n    className: `${styles.details__body} + ${styles.details__body__text}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  })) : null, __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: styles.body__comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: styles.comments__title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"COMMENT\"), __jsx(\"div\", {\n    className: styles.comments__item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: styles.item__content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"This is a comment about something\"), __jsx(\"p\", {\n    className: styles.item__date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"A couple of hours ago\")), __jsx(\"div\", {\n    className: styles.comments__input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, __jsx(\"textarea\", {\n    placeholder: \"Write comment\",\n    className: styles.input__textarea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"button\",\n    value: \"Submit\",\n    className: styles.input__submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }))))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport const getServerSideProps = async ({\n  params\n}) => {\n  return {\n    props: {}\n  };\n};\nconst FETCH_POST_QUERY = gql`\n  query Post($postId: Int!){\n    post(id: $postId) {\n      id \n      title \n      content \n      image \n      createdAt \n      comments{\n        content createdAt\n      }\n    }\n  }\n`;\nconst UPDATE_POST_MUTATION = gql`\n  mutation updatePost(\n    $title:String!\n    $content:String!\n    $image:String!\n  ){\n    updatePost(\n      post: {\n        title: $title,\n        content: $content,\n        image: $image\t\n    })\n    {\n      title\n      content \n      image\n      comments{\n        content createdAt\n      }\n    }\n  }\n`;\nexport default ViewPost;","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/frontend-exam/frontend/pages/posts/[postId].js"],"names":["axios","Link","useEffect","useState","useRef","useContext","UserContext","Navbar","Footer","styles","useQuery","gql","useRouter","ViewPost","router","postId","query","loading","error","data","FETCH_POST_QUERY","variables","Number","isLogin","newComment","updateNewComment","isEditing","setEditStatus","values","setValues","title","content","image","uploadImage","cancelEditPost","saveEditPost","handleImageUpload","event","current","click","handleImage","target","files","setTempImage","URL","createObjectURL","viewpost__container","post","navigation__header","navigation__content","content__text","navigation__body","body__action","action__container","action__text","body__details","details__date","createdAt","slice","details__title","tempTitle","handleTitle","details__title__text","details__container","details__","details__upload_image","details__image","details__body","tempBody","handleBody","details__body__text","body__comments","comments__title","comments__item","item__content","item__date","comments__input","input__textarea","input__submit","getServerSideProps","params","props","UPDATE_POST_MUTATION"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport Link from 'next/link'\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { useContext } from 'react'\r\nimport UserContext from '../../components/UserContext'\r\nimport Navbar from '../../components/navbar';\r\nimport Footer from '../../components/footer';\r\nimport styles from './viewpost.module.css';\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport { useRouter } from 'next/router'\r\n\r\n\r\n\r\nfunction ViewPost() {\r\n  const router = useRouter();\r\n  const { postId } = router.query;\r\n\r\n  const { loading, error, data } = useQuery(FETCH_POST_QUERY, {\r\n    variables: { \r\n      postId: Number(postId) \r\n    }\r\n  })\r\n\r\n  const { isLogin } = useContext(UserContext);\r\n\r\n  const [newComment, updateNewComment] = useState('');\r\n  const [isEditing, setEditStatus] = useState(false);\r\n  const [values, setValues] = useState({\r\n    title: '',\r\n    content: '',\r\n    image: ''\r\n  })\r\n\r\n  const uploadImage = useRef(null);\r\n\r\n\r\n  const cancelEditPost = () => {\r\n    \r\n  }\r\n\r\n  const saveEditPost = () => {\r\n    \r\n  }\r\n\r\n  const handleImageUpload = (event) => {\r\n    uploadImage.current.click();\r\n  }\r\n\r\n  const handleImage = (event) => {\r\n    if(event.target.files[0]){\r\n      setTempImage(URL.createObjectURL(event.target.files[0]));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      { data &&\r\n        <div className={styles.viewpost__container}>\r\n          <Navbar />\r\n          { data.post.title ?\r\n            <div className={styles.navigation__header}>\r\n              <div className={styles.navigation__content}>\r\n                <Link href=\"/\">\r\n                  <a className={styles.content__text}>HOME</a>\r\n                </Link>\r\n                <p>&nbsp;&nbsp;{' > '}&nbsp;</p>\r\n                <p>&nbsp;{data.post.title}</p>\r\n              </div>\r\n            </div>\r\n            : null\r\n          }\r\n          <div className={styles.navigation__body}>\r\n            { isLogin ?\r\n              <div className={styles.body__action}>\r\n                { isEditing ?\r\n                <div className={styles.action__container}>\r\n                  <p \r\n                    className={styles.action__text}\r\n                    onClick={saveEditPost}\r\n                  >\r\n                    Save Post</p>\r\n                  <p \r\n                    className={styles.action__text}\r\n                    onClick={cancelEditPost}\r\n                  >Cancel</p>\r\n                </div>\r\n                : <p \r\n                    className={styles.action__text}\r\n                    onClick={() => setEditStatus(!isEditing)}\r\n                  >Edit Post</p>\r\n                }\r\n              </div>\r\n              : null\r\n            }\r\n            { data ?\r\n              <div className={styles.body__details}>\r\n                <p className={styles.details__date}>\r\n                  {data.post.createdAt ? data.post.createdAt.slice(0,10) : null}\r\n                </p>\r\n                { !isEditing \r\n                ? <h2 className={styles.details__title}>{data.post.title}</h2>\r\n                : <textarea \r\n                    defaultValue={tempTitle}\r\n                    onChange={handleTitle}\r\n                    className={`${styles.details__title} + ${styles.details__title__text}`}\r\n                  />\r\n                }\r\n                <div className={styles.details__container}>\r\n                  { isEditing \r\n                    ? \r\n                    <div className={styles.details__}>\r\n                      <button\r\n                        className={styles.details__upload_image}\r\n                        onClick={handleImageUpload}\r\n                      >\r\n                        Upload Image\r\n                      </button>\r\n                      <input \r\n                        name=\"myfile\" \r\n                        type=\"file\"\r\n                        ref={uploadImage} \r\n                        onChange={handleImage}\r\n                        hidden\r\n                      />\r\n                    </div>\r\n                    : null\r\n                  }\r\n                  <img\r\n                    className={styles.details__image} \r\n                    src={data.post.image ? data.post.image : \"/images/girl.png\"}\r\n                  />\r\n                </div>\r\n                { !isEditing\r\n                  ? <p className={styles.details__body}>{data.post.content}</p>\r\n                  : <textarea\r\n                      defaultValue={tempBody}\r\n                      onChange={handleBody}\r\n                      className={`${styles.details__body} + ${styles.details__body__text}`}\r\n                    />\r\n                }\r\n              </div>\r\n              : null\r\n            }\r\n            <hr />\r\n            <div className={styles.body__comments}>\r\n              <h2 className={styles.comments__title}>COMMENT</h2>\r\n              <div className={styles.comments__item}>\r\n                <p className={styles.item__content}>This is a comment about something</p>\r\n                <p className={styles.item__date}>A couple of hours ago</p>\r\n              </div>\r\n              <div className={styles.comments__input}>\r\n                <textarea\r\n                  placeholder=\"Write comment\" \r\n                  className={styles.input__textarea} \r\n                />\r\n                <input \r\n                  type=\"button\" \r\n                  value=\"Submit\"\r\n                  className={styles.input__submit}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const getServerSideProps = async ({params}) => {\r\n  return {props: {}};\r\n}\r\n\r\nconst FETCH_POST_QUERY = gql`\r\n  query Post($postId: Int!){\r\n    post(id: $postId) {\r\n      id \r\n      title \r\n      content \r\n      image \r\n      createdAt \r\n      comments{\r\n        content createdAt\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst UPDATE_POST_MUTATION = gql`\r\n  mutation updatePost(\r\n    $title:String!\r\n    $content:String!\r\n    $image:String!\r\n  ){\r\n    updatePost(\r\n      post: {\r\n        title: $title,\r\n        content: $content,\r\n        image: $image\t\r\n    })\r\n    {\r\n      title\r\n      content \r\n      image\r\n      comments{\r\n        content createdAt\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\nexport default ViewPost;\r\n"]},"metadata":{},"sourceType":"module"}