{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/Kobeboy/Desktop/FE_EXAM(CLEANUP)/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation addComment(\\n    $postId: Int!\\n    $content: String!\\n  ){\\n    addComment(\\n      postId: $postId,\\n      content: $content\\n    )\\n    {\\n      id createdAt content\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updatePost(\\n    $id: Int!\\n    $title:String!\\n    $content:String\\n    $image:String\\n  ){\\n    updatePost(\\n      post: {\\n        id: $id,\\n        title: $title,\\n        content: $content,\\n        image: $image\\t\\n    })\\n    {\\n      title\\n      content \\n      image\\n      comments{\\n        id content createdAt\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation addPost(\\n    $title:String!\\n    $content:String!\\n    $image:String!\\n  ){\\n    addPost(\\n      post: {\\n        title: $title,\\n        content: $content,\\n        image: $image\\t\\n    })\\n    {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query Post($postId: Int!){\\n    post(id: $postId) {\\n      id \\n      title \\n      content \\n      image \\n      createdAt \\n      comments{\\n        id content createdAt\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query posts(\\n    $limit: Int,\\n    $offset: Int\\n  ){\\n    posts(pagination:{\\n      limit: $limit,\\n      offset: $offset\\n    }) {\\n      id title createdAt image\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nvar FETCH_POSTS_QUERY = gql(_templateObject());\nvar FETCH_POST_QUERY = gql(_templateObject2());\nvar ADD_POST = gql(_templateObject3());\nvar UPDATE_POST = gql(_templateObject4());\nvar ADD_COMMENT = gql(_templateObject5());\nexport { FETCH_POSTS_QUERY, FETCH_POST_QUERY, ADD_POST, UPDATE_POST, ADD_COMMENT };","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/FE_EXAM(CLEANUP)/frontend/repositories/posts.js"],"names":["gql","FETCH_POSTS_QUERY","FETCH_POST_QUERY","ADD_POST","UPDATE_POST","ADD_COMMENT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,iBAAiB,GAAGD,GAAH,mBAAvB;AAcA,IAAME,gBAAgB,GAAGF,GAAH,oBAAtB;AAeA,IAAMG,QAAQ,GAAGH,GAAH,oBAAd;AAkBA,IAAMI,WAAW,GAAGJ,GAAH,oBAAjB;AAyBA,IAAMK,WAAW,GAAGL,GAAH,oBAAjB;AAeA,SAASC,iBAAT,EAA4BC,gBAA5B,EAA8CC,QAA9C,EAAwDC,WAAxD,EAAqEC,WAArE","sourcesContent":["import gql from 'graphql-tag'\r\n\r\nconst FETCH_POSTS_QUERY = gql`\r\n  query posts(\r\n    $limit: Int,\r\n    $offset: Int\r\n  ){\r\n    posts(pagination:{\r\n      limit: $limit,\r\n      offset: $offset\r\n    }) {\r\n      id title createdAt image\r\n    }\r\n  }\r\n`\r\n\r\nconst FETCH_POST_QUERY = gql`\r\n  query Post($postId: Int!){\r\n    post(id: $postId) {\r\n      id \r\n      title \r\n      content \r\n      image \r\n      createdAt \r\n      comments{\r\n        id content createdAt\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst ADD_POST = gql`\r\n  mutation addPost(\r\n    $title:String!\r\n    $content:String!\r\n    $image:String!\r\n  ){\r\n    addPost(\r\n      post: {\r\n        title: $title,\r\n        content: $content,\r\n        image: $image\t\r\n    })\r\n    {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst UPDATE_POST = gql`\r\n  mutation updatePost(\r\n    $id: Int!\r\n    $title:String!\r\n    $content:String\r\n    $image:String\r\n  ){\r\n    updatePost(\r\n      post: {\r\n        id: $id,\r\n        title: $title,\r\n        content: $content,\r\n        image: $image\t\r\n    })\r\n    {\r\n      title\r\n      content \r\n      image\r\n      comments{\r\n        id content createdAt\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst ADD_COMMENT = gql`\r\n  mutation addComment(\r\n    $postId: Int!\r\n    $content: String!\r\n  ){\r\n    addComment(\r\n      postId: $postId,\r\n      content: $content\r\n    )\r\n    {\r\n      id createdAt content\r\n    }\r\n  }\r\n`\r\n\r\nexport { FETCH_POSTS_QUERY, FETCH_POST_QUERY, ADD_POST, UPDATE_POST, ADD_COMMENT };"]},"metadata":{},"sourceType":"module"}