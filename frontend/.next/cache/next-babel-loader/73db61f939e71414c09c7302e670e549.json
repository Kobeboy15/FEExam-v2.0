{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\frontend-exam\\\\frontend\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ApolloClient, ApolloProvider } from \"@apollo/client\";\nimport { useState } from 'react';\nimport UserContext from '../components/UserContext';\nimport '../styles/global.css';\nexport default function App({\n  Component,\n  pageProps\n}) {\n  const {\n    0: loginStatus,\n    1: setLoginStatus\n  } = useState(false);\n  const client = new ApolloClient({\n    url: \"http://localhost:4000\"\n  });\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(UserContext.Provider, {\n    value: {\n      loginStatus: loginStatus,\n      toggleLogin: setLoginStatus\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/frontend-exam/frontend/pages/_app.js"],"names":["ApolloClient","ApolloProvider","useState","UserContext","App","Component","pageProps","loginStatus","setLoginStatus","client","url","toggleLogin"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,gBAA7C;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,sBAAP;AAEA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAb,EAAuC;AACpD,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCN,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMO,MAAM,GAAG,IAAIT,YAAJ,CAAiB;AAC9BU,IAAAA,GAAG,EAAE;AADyB,GAAjB,CAAf;AAIA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEF,MAAAA,WAAW,EAAEA,WAAf;AAA4BI,MAAAA,WAAW,EAAEH;AAAzC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD","sourcesContent":["import { ApolloClient, ApolloProvider } from \"@apollo/client\";\r\nimport { useState } from 'react'\r\nimport UserContext from '../components/UserContext'\r\nimport '../styles/global.css'\r\n\r\nexport default function App({ Component, pageProps }) {\r\n  const [loginStatus, setLoginStatus] = useState(false);\r\n\r\n  const client = new ApolloClient({\r\n    url: \"http://localhost:4000\"\r\n  })\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <UserContext.Provider value={{ loginStatus: loginStatus, toggleLogin: setLoginStatus }}>\r\n        <Component {...pageProps} />\r\n      </UserContext.Provider>\r\n    </ApolloProvider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}