{"ast":null,"code":"import _extends from \"C:/Users/Kobeboy/Desktop/frontend-exam/frontend/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kobeboy\\\\Desktop\\\\frontend-exam\\\\frontend\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport '../styles/global.css';\nimport ApolloClient from \"apollo-client\";\nimport UserContext from '../components/UserContext';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { useState } from 'react';\nexport default function App(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState(false),\n      isLogIn = _useState[0],\n      setIsLogIn = _useState[1];\n\n  var httpLink = createHttpLink({\n    uri: \"http://localhost:4000\"\n  });\n  var client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link: httpLink\n  });\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(UserContext.Provider, {\n    value: {\n      isLogin: isLogIn,\n      setLogin: setIsLogIn\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }))));\n}\n\n_s(App, \"C3twLC0FL2nz1WKbT8ec5Gk7bYk=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Kobeboy/Desktop/frontend-exam/frontend/pages/_app.js"],"names":["ApolloClient","UserContext","ApolloProvider","InMemoryCache","createHttpLink","useState","App","Component","pageProps","isLogIn","setIsLogIn","httpLink","uri","client","cache","link","isLogin","setLogin"],"mappings":";;;;;;;AAAA,OAAO,sBAAP;AACA,OAAOA,YAAP,MAAyB,eAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,GAAT,OAAuC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBAEtBH,QAAQ,CAAC,KAAD,CAFc;AAAA,MAE7CI,OAF6C;AAAA,MAEpCC,UAFoC;;AAIpD,MAAMC,QAAQ,GAAGP,cAAc,CAAC;AAC9BQ,IAAAA,GAAG,EAAE;AADyB,GAAD,CAA/B;AAIA,MAAMC,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9Bc,IAAAA,KAAK,EAAE,IAAIX,aAAJ,EADuB;AAE9BY,IAAAA,IAAI,EAAEJ;AAFwB,GAAjB,CAAf;AAKA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAEP,OAAX;AAAoBQ,MAAAA,QAAQ,EAAEP;AAA9B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD;;GApBuBF,G;;KAAAA,G","sourcesContent":["import '../styles/global.css'\r\nimport ApolloClient from \"apollo-client\"\r\nimport UserContext from '../components/UserContext'\r\nimport { ApolloProvider } from '@apollo/react-hooks'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { useState } from 'react'\r\n\r\nexport default function App({ Component, pageProps }) {\r\n\r\n  const [isLogIn, setIsLogIn] = useState(false);\r\n\r\n  const httpLink = createHttpLink({\r\n    uri: \"http://localhost:4000\"\r\n  })\r\n  \r\n  const client = new ApolloClient({\r\n    cache: new InMemoryCache(),\r\n    link: httpLink\r\n  })\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <UserContext.Provider value={{ isLogin: isLogIn, setLogin: setIsLogIn }}>\r\n        <Component {...pageProps} />\r\n      </UserContext.Provider>\r\n    </ApolloProvider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}